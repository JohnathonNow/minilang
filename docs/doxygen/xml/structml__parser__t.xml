<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structml__parser__t" kind="struct" language="C++" prot="public">
    <compoundname>ml_parser_t</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structml__parser__t_1aeace74d9e1d0b34d86239cc27d4246f9" prot="public" static="no" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t* ml_parser_t::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <qualifiedname>ml_parser_t::Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="52" column="11" bodyfile="src/ml_compiler.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a47c514f13965922664c4adefb113f778" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ml_parser_t::Next</definition>
        <argsstring></argsstring>
        <name>Next</name>
        <qualifiedname>ml_parser_t::Next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="53" column="12" bodyfile="src/ml_compiler.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a127d949917af75e23a1e13472dd9fea6" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* ml_parser_t::ReadData</definition>
        <argsstring></argsstring>
        <name>ReadData</name>
        <qualifiedname>ml_parser_t::ReadData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="54" column="6" bodyfile="src/ml_compiler.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a18439f60d3eaeaf73c4882ad8c46eff3" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void * ml_parser_t::SpecialData</definition>
        <argsstring></argsstring>
        <name>SpecialData</name>
        <qualifiedname>ml_parser_t::SpecialData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="54" column="15" bodyfile="src/ml_compiler.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1affa6bec9f52a5b402d68b468cf027801" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void * ml_parser_t::EscapeData</definition>
        <argsstring></argsstring>
        <name>EscapeData</name>
        <qualifiedname>ml_parser_t::EscapeData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="54" column="27" bodyfile="src/ml_compiler.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a4444e7d957f6ed18b58dcc8d4e5d1fd7" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* ml_parser_t::Read) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>Read</name>
        <qualifiedname>ml_parser_t::Read</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="55" column="7" bodyfile="src/ml_compiler.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1ae6999011879a7ff494b233e9c54d7f7d" prot="public" static="no" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *(*</type>
        <definition>ml_value_t *(* ml_parser_t::Escape) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>Escape</name>
        <qualifiedname>ml_parser_t::Escape</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="56" column="1" bodyfile="src/ml_compiler.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1acd7ffcf2a1eaf8d83fd7b91ce5cedaf7" prot="public" static="no" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *(*</type>
        <definition>ml_value_t *(* ml_parser_t::Special) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>Special</name>
        <qualifiedname>ml_parser_t::Special</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="57" column="1" bodyfile="src/ml_compiler.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a0379e15d8bb105fd085a8760a35baa23" prot="public" static="no" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* ml_parser_t::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <qualifiedname>ml_parser_t::Value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="59" column="12" bodyfile="src/ml_compiler.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1ac0814e5e3401952e754e360640f37066" prot="public" static="no" mutable="no">
        <type><ref refid="structmlc__expr__t" kindref="compound">mlc_expr_t</ref> *</type>
        <definition>mlc_expr_t* ml_parser_t::Expr</definition>
        <argsstring></argsstring>
        <name>Expr</name>
        <qualifiedname>ml_parser_t::Expr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="60" column="12" bodyfile="src/ml_compiler.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1abc2dc018bdfce39853d63c40733a5921" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ml_parser_t::Ident</definition>
        <argsstring></argsstring>
        <name>Ident</name>
        <qualifiedname>ml_parser_t::Ident</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="61" column="12" bodyfile="src/ml_compiler.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1afa2215d0ad2819b09637ec2f45c2a47c" prot="public" static="no" mutable="no">
        <type>union <ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref></type>
        <definition>union ml_parser_t ml_parser_t</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>ml_parser_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="62" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1aa2be542e17b31a270bd085121ce47395" prot="public" static="no" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* ml_parser_t::Warnings</definition>
        <argsstring></argsstring>
        <name>Warnings</name>
        <qualifiedname>ml_parser_t::Warnings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="63" column="12" bodyfile="src/ml_compiler.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1af386259577d457d838c79a8a8c315596" prot="public" static="no" mutable="no">
        <type><ref refid="structmlc__expected__delimiter__t" kindref="compound">mlc_expected_delimiter_t</ref> *</type>
        <definition>mlc_expected_delimiter_t* ml_parser_t::ExpectedDelimiter</definition>
        <argsstring></argsstring>
        <name>ExpectedDelimiter</name>
        <qualifiedname>ml_parser_t::ExpectedDelimiter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="64" column="26" bodyfile="src/ml_compiler.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a385e33f1d02a1ee98e534910af6d2f34" prot="public" static="no" mutable="no">
        <type><ref refid="structml__source__t" kindref="compound">ml_source_t</ref></type>
        <definition>ml_source_t ml_parser_t::Source</definition>
        <argsstring></argsstring>
        <name>Source</name>
        <qualifiedname>ml_parser_t::Source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="65" column="13" bodyfile="src/ml_compiler.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a9b6a9a3fce1933976752c5fc93943dd4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ml_parser_t::Line</definition>
        <argsstring></argsstring>
        <name>Line</name>
        <qualifiedname>ml_parser_t::Line</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="66" column="5" bodyfile="src/ml_compiler.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1ab95de5dc2108418da6a7c337d4b5e574" prot="public" static="no" mutable="no">
        <type>jmp_buf</type>
        <definition>jmp_buf ml_parser_t::OnError</definition>
        <argsstring></argsstring>
        <name>OnError</name>
        <qualifiedname>ml_parser_t::OnError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="67" column="9" bodyfile="src/ml_compiler.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structml__parser__t_1a53a4a1b50ce28a95b9678512dbf1656a" prot="public" static="no" mutable="no">
        <type>ml_token_t</type>
        <definition>ml_token_t ml_parser_t::Token</definition>
        <argsstring></argsstring>
        <name>Token</name>
        <qualifiedname>ml_parser_t::Token</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_compiler.c" line="68" column="12" bodyfile="src/ml_compiler.c" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>inthash_t</label>
        <link refid="structinthash__t"/>
      </node>
      <node id="1">
        <label>ml_parser_t</label>
        <link refid="structml__parser__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>Escape</edgelabel>
          <edgelabel>Special</edgelabel>
          <edgelabel>Value</edgelabel>
          <edgelabel>Warnings</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>Expr</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ExpectedDelimiter</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>Source</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>ml_source_t</label>
        <link refid="structml__source__t"/>
      </node>
      <node id="2">
        <label>ml_type_t</label>
        <link refid="structml__type__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>Constructor</edgelabel>
          <edgelabel>deref</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Parents</edgelabel>
          <edgelabel>TypedFns</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>Exports</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ml_value_t</label>
        <link refid="structml__value__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>mlc_expected_delimiter_t</label>
        <link refid="structmlc__expected__delimiter__t"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Prev</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>mlc_expr_t</label>
        <link refid="structmlc__expr__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>Next</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>stringmap_node_t</label>
        <link refid="structstringmap__node__t"/>
        <childnode refid="6" relation="usage">
          <edgelabel>Left</edgelabel>
          <edgelabel>Right</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>stringmap_t</label>
        <link refid="structstringmap__t"/>
        <childnode refid="6" relation="usage">
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/ml_compiler.c" line="51" column="1" bodyfile="src/ml_compiler.c" bodystart="51" bodyend="69"/>
    <listofallmembers>
      <member refid="structml__parser__t_1ae6999011879a7ff494b233e9c54d7f7d" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Escape</name></member>
      <member refid="structml__parser__t_1affa6bec9f52a5b402d68b468cf027801" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>EscapeData</name></member>
      <member refid="structml__parser__t_1af386259577d457d838c79a8a8c315596" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>ExpectedDelimiter</name></member>
      <member refid="structml__parser__t_1ac0814e5e3401952e754e360640f37066" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Expr</name></member>
      <member refid="structml__parser__t_1abc2dc018bdfce39853d63c40733a5921" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Ident</name></member>
      <member refid="structml__parser__t_1a9b6a9a3fce1933976752c5fc93943dd4" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Line</name></member>
      <member refid="structml__parser__t_1a47c514f13965922664c4adefb113f778" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Next</name></member>
      <member refid="structml__parser__t_1ab95de5dc2108418da6a7c337d4b5e574" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>OnError</name></member>
      <member refid="structml__parser__t_1a4444e7d957f6ed18b58dcc8d4e5d1fd7" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Read</name></member>
      <member refid="structml__parser__t_1a127d949917af75e23a1e13472dd9fea6" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>ReadData</name></member>
      <member refid="structml__parser__t_1a385e33f1d02a1ee98e534910af6d2f34" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Source</name></member>
      <member refid="structml__parser__t_1acd7ffcf2a1eaf8d83fd7b91ce5cedaf7" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Special</name></member>
      <member refid="structml__parser__t_1a18439f60d3eaeaf73c4882ad8c46eff3" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>SpecialData</name></member>
      <member refid="structml__parser__t_1a53a4a1b50ce28a95b9678512dbf1656a" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Token</name></member>
      <member refid="structml__parser__t_1aeace74d9e1d0b34d86239cc27d4246f9" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Type</name></member>
      <member refid="structml__parser__t_1a0379e15d8bb105fd085a8760a35baa23" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Value</name></member>
      <member refid="structml__parser__t_1aa2be542e17b31a270bd085121ce47395" prot="public" virt="non-virtual"><scope>ml_parser_t</scope><name>Warnings</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
