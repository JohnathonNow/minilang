<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="group__types" kind="group">
    <compoundname>types</compoundname>
    <title>Types</title>
    <innerclass refid="structml__value__t" prot="public">ml_value_t</innerclass>
    <innerclass refid="structml__hash__chain__t" prot="public">ml_hash_chain_t</innerclass>
    <innerclass refid="structml__type__t" prot="public">ml_type_t</innerclass>
    <innerclass refid="structml__visitor__t" prot="public">ml_visitor_t</innerclass>
    <innerclass refid="structml__cfunction__t" prot="public">ml_cfunction_t</innerclass>
    <innerclass refid="structml__cfunctionx__t" prot="public">ml_cfunctionx_t</innerclass>
    <innerclass refid="structml__tuple__t" prot="public">ml_tuple_t</innerclass>
    <innerclass refid="structml__boolean__t" prot="public">ml_boolean_t</innerclass>
    <innerclass refid="structml__integer__t" prot="public">ml_integer_t</innerclass>
    <innerclass refid="structml__double__t" prot="public">ml_double_t</innerclass>
    <innerclass refid="structml__integer__range__t" prot="public">ml_integer_range_t</innerclass>
    <innerclass refid="structml__real__range__t" prot="public">ml_real_range_t</innerclass>
    <innerclass refid="structml__address__t" prot="public">ml_address_t</innerclass>
    <innerclass refid="structml__string__t" prot="public">ml_string_t</innerclass>
    <innerclass refid="structml__stringbuffer__t" prot="public">ml_stringbuffer_t</innerclass>
    <innerclass refid="structml__stringbuffer__node__t" prot="public">ml_stringbuffer_node_t</innerclass>
    <innerclass refid="structml__list__node__t" prot="public">ml_list_node_t</innerclass>
    <innerclass refid="structml__list__t" prot="public">ml_list_t</innerclass>
    <innerclass refid="structml__list__iter__t" prot="public">ml_list_iter_t</innerclass>
    <innerclass refid="structml__method__t" prot="public">ml_method_t</innerclass>
    <innerclass refid="structml__method__cached__t" prot="public">ml_method_cached_t</innerclass>
    <innerclass refid="structml__map__t" prot="public">ml_map_t</innerclass>
    <innerclass refid="structml__map__node__t" prot="public">ml_map_node_t</innerclass>
    <innerclass refid="structml__map__iter__t" prot="public">ml_map_iter_t</innerclass>
    <innerclass refid="structml__set__t" prot="public">ml_set_t</innerclass>
    <innerclass refid="structml__set__node__t" prot="public">ml_set_node_t</innerclass>
    <innerclass refid="structml__set__iter__t" prot="public">ml_set_iter_t</innerclass>
    <innerclass refid="structml__module__t" prot="public">ml_module_t</innerclass>
    <innerclass refid="structml__external__t" prot="public">ml_external_t</innerclass>
    <innerclass refid="structml__externals__t" prot="public">ml_externals_t</innerclass>
    <innerclass refid="structml__symbol__t" prot="public">ml_symbol_t</innerclass>
    <innerclass refid="structml__symbol__range__t" prot="public">ml_symbol_range_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__types_1gad5edeaa21792576b6bc1ba21c2c9277d" prot="public" static="no" strong="no">
        <type></type>
        <name>ml_map_order_t</name>
        <enumvalue id="group__types_1ggad5edeaa21792576b6bc1ba21c2c9277dacc12294da82c094e7aae919db1d75495" prot="public">
          <name>MAP_ORDER_INSERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggad5edeaa21792576b6bc1ba21c2c9277da78579c6a967419d8f039830f8f5e5815" prot="public">
          <name>MAP_ORDER_LRU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggad5edeaa21792576b6bc1ba21c2c9277dafdf84c9b85494868c75725fc8a185ede" prot="public">
          <name>MAP_ORDER_MRU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggad5edeaa21792576b6bc1ba21c2c9277da250bcf57b26a76516f4f2f2ef4b718b3" prot="public">
          <name>MAP_ORDER_ASC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggad5edeaa21792576b6bc1ba21c2c9277dacfa32c164152f9717920382573cf315e" prot="public">
          <name>MAP_ORDER_DESC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="956" column="1" bodyfile="src/ml_types.h" bodystart="956" bodyend="962"/>
      </memberdef>
      <memberdef kind="enum" id="group__types_1gaa2cac66264dd0aa81c32904fb861e0f0" prot="public" static="no" strong="no">
        <type></type>
        <name>ml_set_order_t</name>
        <enumvalue id="group__types_1ggaa2cac66264dd0aa81c32904fb861e0f0a8a0987104e1c2b9dec1b12767eb80171" prot="public">
          <name>SET_ORDER_INSERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggaa2cac66264dd0aa81c32904fb861e0f0ac85dd7da03f53e51a341c90327813e85" prot="public">
          <name>SET_ORDER_LRU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggaa2cac66264dd0aa81c32904fb861e0f0a9b961b2b59f0da10038d60fbe236770c" prot="public">
          <name>SET_ORDER_MRU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggaa2cac66264dd0aa81c32904fb861e0f0ac35bec0ffba87ddcdd1e369320323125" prot="public">
          <name>SET_ORDER_ASC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__types_1ggaa2cac66264dd0aa81c32904fb861e0f0a504cc6cd5a28fba7f7ca465d7b8b8089" prot="public">
          <name>SET_ORDER_DESC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1088" column="1" bodyfile="src/ml_types.h" bodystart="1088" bodyend="1094"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__types_1ga5d1583b78bcbb3d035efb58c8bcad3ab" prot="public" static="no">
        <type>struct ml_value_t</type>
        <definition>typedef struct ml_value_t ml_value_t</definition>
        <argsstring></argsstring>
        <name>ml_value_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="20" column="25" bodyfile="src/ml_types.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga40cf6ed168df77908c4fa9bba520dd2c" prot="public" static="no">
        <type>struct ml_type_t</type>
        <definition>typedef struct ml_type_t ml_type_t</definition>
        <argsstring></argsstring>
        <name>ml_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="21" column="24" bodyfile="src/ml_types.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaf26157b9157d19066e5ae19261b326a4" prot="public" static="no">
        <type>struct ml_context_t</type>
        <definition>typedef struct ml_context_t ml_context_t</definition>
        <argsstring></argsstring>
        <name>ml_context_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="22" column="27" bodyfile="src/ml_types.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga7777bd8a981afee40937ca9239e7d704" prot="public" static="no">
        <type>struct ml_state_t</type>
        <definition>typedef struct ml_state_t ml_state_t</definition>
        <argsstring></argsstring>
        <name>ml_state_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="23" column="25" bodyfile="src/ml_types.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaca01dd5a349a1f5dd407ca5c6a70b464" prot="public" static="no">
        <type>struct ml_hash_chain_t</type>
        <definition>typedef struct ml_hash_chain_t ml_hash_chain_t</definition>
        <argsstring></argsstring>
        <name>ml_hash_chain_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="47" column="30" bodyfile="src/ml_types.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga651fda8538b12f020b2706f4ccd40e5c" prot="public" static="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *(*</type>
        <definition>typedef ml_value_t *(* ml_callback_t) (void *Data, int Count, ml_value_t **Args)</definition>
        <argsstring>)(void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="323" column="9" bodyfile="src/ml_types.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga286aad2e8327fdef73ac931056a37f1a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ml_callbackx_t) (ml_state_t *Caller, void *Data, int Count, ml_value_t **Args)</definition>
        <argsstring>)(ml_state_t *Caller, void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_callbackx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="324" column="9" bodyfile="src/ml_types.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga65b08a51fa17b372c28f8cd1f91ffac2" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ml_value_find_fn) (void *Data, ml_value_t *Value, int HasRefs)</definition>
        <argsstring>)(void *Data, ml_value_t *Value, int HasRefs)</argsstring>
        <name>ml_value_find_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="326" column="9" bodyfile="src/ml_types.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga9424921faaafd3d4e804c5804a2efab4" prot="public" static="no">
        <type>struct ml_cfunction_t</type>
        <definition>typedef struct ml_cfunction_t ml_cfunction_t</definition>
        <argsstring></argsstring>
        <name>ml_cfunction_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="351" column="29" bodyfile="src/ml_types.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gae875c856b22e3a3b05016e380af6a93e" prot="public" static="no">
        <type>struct ml_cfunctionx_t</type>
        <definition>typedef struct ml_cfunctionx_t ml_cfunctionx_t</definition>
        <argsstring></argsstring>
        <name>ml_cfunctionx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="352" column="30" bodyfile="src/ml_types.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga44cd4a6d85015feb41ac4ae9763b4ca5" prot="public" static="no">
        <type>struct ml_tuple_t</type>
        <definition>typedef struct ml_tuple_t ml_tuple_t</definition>
        <argsstring></argsstring>
        <name>ml_tuple_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="457" column="25" bodyfile="src/ml_types.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaefe0dadf345114067b00eda0bd1ef00e" prot="public" static="no">
        <type>struct ml_boolean_t</type>
        <definition>typedef struct ml_boolean_t ml_boolean_t</definition>
        <argsstring></argsstring>
        <name>ml_boolean_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="500" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaf100447b111e59544a8d0a6e2a85fd3f" prot="public" static="no">
        <type>typedefint struct ml_address_t</type>
        <definition>typedef typedefint struct ml_address_t ml_address_t</definition>
        <argsstring></argsstring>
        <name>ml_address_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="625" column="27" bodyfile="src/ml_types.h" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga30f9e713738c7c2a9b49763ef2e33cdc" prot="public" static="no">
        <type>struct ml_string_t</type>
        <definition>typedef struct ml_string_t ml_string_t</definition>
        <argsstring></argsstring>
        <name>ml_string_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="626" column="26" bodyfile="src/ml_types.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga7d9b1da6a98050a08f867ede682b4441" prot="public" static="no">
        <type>struct ml_stringbuffer_t</type>
        <definition>typedef struct ml_stringbuffer_t ml_stringbuffer_t</definition>
        <argsstring></argsstring>
        <name>ml_stringbuffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="686" column="32" bodyfile="src/ml_types.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga1a9b60322d8f2bf52768fbe87110931d" prot="public" static="no">
        <type>struct ml_stringbuffer_node_t</type>
        <definition>typedef struct ml_stringbuffer_node_t ml_stringbuffer_node_t</definition>
        <argsstring></argsstring>
        <name>ml_stringbuffer_node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="687" column="37" bodyfile="src/ml_types.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga4100af90ceaf1b5e5bcc4bf7e63828fa" prot="public" static="no">
        <type>struct ml_list_node_t</type>
        <definition>typedef struct ml_list_node_t ml_list_node_t</definition>
        <argsstring></argsstring>
        <name>ml_list_node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="738" column="29" bodyfile="src/ml_types.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga8b8cfa7b6a6227ed5388e75a98859f74" prot="public" static="no">
        <type>struct ml_list_t</type>
        <definition>typedef struct ml_list_t ml_list_t</definition>
        <argsstring></argsstring>
        <name>ml_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="739" column="24" bodyfile="src/ml_types.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga8b6c7254a59c415e36424ece80842f85" prot="public" static="no">
        <type>struct ml_method_t</type>
        <definition>typedef struct ml_method_t ml_method_t</definition>
        <argsstring></argsstring>
        <name>ml_method_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="840" column="26" bodyfile="src/ml_types.h" bodystart="840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga9cb4ebe1bd82710fe1bd5ad7964e38e9" prot="public" static="no">
        <type>struct ml_methods_t</type>
        <definition>typedef struct ml_methods_t ml_methods_t</definition>
        <argsstring></argsstring>
        <name>ml_methods_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="841" column="27" bodyfile="src/ml_types.h" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga820c5d189e5712125a3a86afbf0dca68" prot="public" static="no">
        <type>struct ml_method_cached_t</type>
        <definition>typedef struct ml_method_cached_t ml_method_cached_t</definition>
        <argsstring></argsstring>
        <name>ml_method_cached_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="869" column="33" bodyfile="src/ml_types.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gab1bdab18a8280a04446b899dab935c4b" prot="public" static="no">
        <type>struct ml_map_t</type>
        <definition>typedef struct ml_map_t ml_map_t</definition>
        <argsstring></argsstring>
        <name>ml_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="954" column="23" bodyfile="src/ml_types.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaf1bbe9ee8fb9f988ef74ff14514e8251" prot="public" static="no">
        <type>struct ml_map_node_t</type>
        <definition>typedef struct ml_map_node_t ml_map_node_t</definition>
        <argsstring></argsstring>
        <name>ml_map_node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="955" column="28" bodyfile="src/ml_types.h" bodystart="955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gae44b147b7a48e620195df83903664efe" prot="public" static="no">
        <type>struct ml_set_t</type>
        <definition>typedef struct ml_set_t ml_set_t</definition>
        <argsstring></argsstring>
        <name>ml_set_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1086" column="23" bodyfile="src/ml_types.h" bodystart="1086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga94845e632ee33a05c4fec12f90158403" prot="public" static="no">
        <type>struct ml_set_node_t</type>
        <definition>typedef struct ml_set_node_t ml_set_node_t</definition>
        <argsstring></argsstring>
        <name>ml_set_node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1087" column="28" bodyfile="src/ml_types.h" bodystart="1087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1gaa4df5de379f9d031b34c9aedc2cb1ec5" prot="public" static="no">
        <type>struct ml_externals_t</type>
        <definition>typedef struct ml_externals_t ml_externals_t</definition>
        <argsstring></argsstring>
        <name>ml_externals_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1212" column="29" bodyfile="src/ml_types.h" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__types_1ga27f584e8ed7e733ba66f1ae6c6a7c6bb" prot="public" static="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *(*</type>
        <definition>typedef ml_value_t *(* ml_deserializer_t) (const char *Type, int Count, ml_value_t **Args)</definition>
        <argsstring>)(const char *Type, int Count, ml_value_t **Args)</argsstring>
        <name>ml_deserializer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1230" column="9" bodyfile="src/ml_types.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__types_1ga1091fbf759435c923427fba49fabf0c8" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLTypeT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLTypeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="80" column="18" declfile="src/ml_types.h" declline="80" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gafe7810b83a1f5446f8f840a9ad1d5ef2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLTypeUnionT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLTypeUnionT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="133" column="18" declfile="src/ml_types.h" declline="133" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga7eb5f2c70513bb79171d959d80580bee" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLVisitorT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLVisitorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="194" column="18" declfile="src/ml_types.h" declline="194" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gaa0f60d6668b279bce47b6a1b2e8914d7" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLAnyT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLAnyT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="312" column="18" declfile="src/ml_types.h" declline="312" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga1d5a519e47ea7fd8b1854b65d6e52a95" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLNilT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLNilT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="313" column="18" declfile="src/ml_types.h" declline="313" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga2ec9e3439a8563694f540efeaf7cfc42" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLSomeT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSomeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="314" column="18" declfile="src/ml_types.h" declline="314" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga81b319b58d74b56b0176f20b6971ef59" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLBlankT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLBlankT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="315" column="18" declfile="src/ml_types.h" declline="315" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga0e7d069faa2ca5029a887b1e2f04882c" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref></type>
        <definition>ml_value_t MLNil[]</definition>
        <argsstring>[]</argsstring>
        <name>MLNil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="317" column="19" declfile="src/ml_types.h" declline="317" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga5a784a1b3d28fbb020c6226b027f93d8" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref></type>
        <definition>ml_value_t MLSome[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSome</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="318" column="19" declfile="src/ml_types.h" declline="318" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga1199320700d4b5af70337365b34d32c6" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref></type>
        <definition>ml_value_t MLBlank[]</definition>
        <argsstring>[]</argsstring>
        <name>MLBlank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="319" column="19" declfile="src/ml_types.h" declline="319" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gadfa686e2b22ff3de8efd996b22ebe109" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLSequenceT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSequenceT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="333" column="18" declfile="src/ml_types.h" declline="333" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga15d6b7916ced3aab313248fed81c9695" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLFunctionT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLFunctionT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="347" column="18" declfile="src/ml_types.h" declline="347" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga187cadc2de67390b8bd8696956cc4f29" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="370" column="18" declfile="src/ml_types.h" declline="370" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gad0ee7eaae9915af04f83c4e148ec1988" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionXT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="371" column="18" declfile="src/ml_types.h" declline="371" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga5c079c2a6513e7195ce27c3e919208b2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionZT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionZT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="372" column="18" declfile="src/ml_types.h" declline="372" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga1d077e9825cc62009cab8b7e370b8d29" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLCallCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCallCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="380" column="24" declfile="src/ml_types.h" declline="380" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gade0d764588e29192db86750e06ce0a36" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLMarkCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLMarkCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="381" column="24" declfile="src/ml_types.h" declline="381" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gaf0455189014d9e906bdb2c506aa9b7c9" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLCallDC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCallDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="382" column="24" declfile="src/ml_types.h" declline="382" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga5dd4db17549f9692a6fe17df079ced10" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLSwapCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSwapCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="383" column="24" declfile="src/ml_types.h" declline="383" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga97bff54161bb0f06529470eddf5206f3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLContextKeyT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLContextKeyT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="385" column="18" declfile="src/ml_types.h" declline="385" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gabb8f52b07c29d2a46068f2af4cc3ede3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref></type>
        <definition>ml_cfunction_t MLContextKey[]</definition>
        <argsstring>[]</argsstring>
        <name>MLContextKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="386" column="23" declfile="src/ml_types.h" declline="386" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga61289eb0573f6351ea7416a268c97aec" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLTupleT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLTupleT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="459" column="18" declfile="src/ml_types.h" declline="459" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga42098a64bc6c6c63f8e80c1338124a58" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLBooleanT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLBooleanT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="502" column="18" declfile="src/ml_types.h" declline="502" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga030042dbfb5c710e445ddd1d836c2ee0" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__boolean__t" kindref="compound">ml_boolean_t</ref></type>
        <definition>ml_boolean_t MLTrue[]</definition>
        <argsstring>[]</argsstring>
        <name>MLTrue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="503" column="21" declfile="src/ml_types.h" declline="503" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gac87a475b780a3409eb8fe3d2104329ef" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__boolean__t" kindref="compound">ml_boolean_t</ref></type>
        <definition>ml_boolean_t MLFalse[]</definition>
        <argsstring>[]</argsstring>
        <name>MLFalse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="504" column="21" declfile="src/ml_types.h" declline="504" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga71e8d0ffd0f61b431b81786176d1daef" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLNumberT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLNumberT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="511" column="18" declfile="src/ml_types.h" declline="511" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga792f15e358253d7114d702cd1142efc2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLRealT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLRealT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="512" column="18" declfile="src/ml_types.h" declline="512" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga7f36d3290d9943138ec1effb4cb4eb49" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLIntegerT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLIntegerT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="513" column="18" declfile="src/ml_types.h" declline="513" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga033fb58a59ea7899d14702914c86ebf5" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLDoubleT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLDoubleT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="514" column="18" declfile="src/ml_types.h" declline="514" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga29e6655325017198ddb547b0b77596cf" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLIntegerRangeT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLIntegerRangeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="604" column="18" declfile="src/ml_types.h" declline="604" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga4375c307ffeb47f4fbd0099b21838ad5" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLRealRangeT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLRealRangeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="611" column="18" declfile="src/ml_types.h" declline="611" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga7ac4a867adf2e7577ea5c461ba115710" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLAddressT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLAddressT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="641" column="18" declfile="src/ml_types.h" declline="641" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga5f3415f26ed67ee2456de64886bfe9ae" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLBufferT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLBufferT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="642" column="18" declfile="src/ml_types.h" declline="642" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga3e9d8b4e0367d7899e3cf3812f39d3f2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLStringT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLStringT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="643" column="18" declfile="src/ml_types.h" declline="643" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gaf4ce606a5976bcbb41b451750bd530fa" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLRegexT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLRegexT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="645" column="18" declfile="src/ml_types.h" declline="645" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga4ff94a55fc6e37c8a8084c88224c8838" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLStringBufferT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLStringBufferT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="646" column="18" declfile="src/ml_types.h" declline="646" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga9f2ae09d61ca4a50043f754671d75dac" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLListT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLListT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="741" column="18" declfile="src/ml_types.h" declline="741" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga156dd7b19b454f8ce3dce93bb30cddbc" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* MLMethodDefine</definition>
        <argsstring></argsstring>
        <name>MLMethodDefine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="837" column="19" declfile="src/ml_types.h" declline="837" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga65beab28734e99107675e8f68e8f97af" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* MLMethodDefault</definition>
        <argsstring></argsstring>
        <name>MLMethodDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="838" column="19" declfile="src/ml_types.h" declline="838" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga8107ad8b261da2afa16428f5b9f69ff3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLMethodT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLMethodT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="848" column="18" declfile="src/ml_types.h" declline="848" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga1fdef6f852d601d660162aaeaf523b41" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLMapT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLMapT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="964" column="18" declfile="src/ml_types.h" declline="964" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gab822cd09cc98aea6b5d7a1a176e67e88" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLNamesT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLNamesT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1062" column="18" declfile="src/ml_types.h" declline="1062" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gacb01e14b7512cc6feb92c9e0ec72b1de" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLSetT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSetT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1096" column="18" declfile="src/ml_types.h" declline="1096" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga7b17bc09f170e0b7ec6194931ee90ccf" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLModuleT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLModuleT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1184" column="18" declfile="src/ml_types.h" declline="1184" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga40c8e39a70f2eb8fc1bb7fc62c8fff21" prot="public" static="no" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref></type>
        <definition>ml_value_t sentinel</definition>
        <argsstring></argsstring>
        <name>sentinel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1192" column="27" bodyfile="src/ml_types.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gaf30a8f7e6e6daffc68c2cbe2f7d4963f" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLExternalT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLExternalT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1199" column="18" declfile="src/ml_types.h" declline="1199" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gacf1fce9ad8267b45c03259f33f2b8678" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLExternalSetT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLExternalSetT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1200" column="18" declfile="src/ml_types.h" declline="1200" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1gacb691b8ab8295533b6548e21857794df" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__externals__t" kindref="compound">ml_externals_t</ref></type>
        <definition>ml_externals_t MLExternals[1]</definition>
        <argsstring>[1]</argsstring>
        <name>MLExternals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1221" column="23" declfile="src/ml_types.h" declline="1221" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga659caeec6bd9c25d72a141e7b4e82ea2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLSymbolT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSymbolT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1252" column="18" declfile="src/ml_types.h" declline="1252" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__types_1ga6f0c8c1c0f120d865a99f0a17f55dc66" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLSymbolRangeT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSymbolRangeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1263" column="18" declfile="src/ml_types.h" declline="1263" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__types_1ga093661bf7854acd034da312aaa49f89f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ml_default_hash</definition>
        <argsstring>(ml_value_t *Value, ml_hash_chain_t *Chain)</argsstring>
        <name>ml_default_hash</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structml__hash__chain__t" kindref="compound">ml_hash_chain_t</ref> *</type>
          <declname>Chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="82" column="6" declfile="src/ml_types.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0bac995f5964d44bfc29ff12420a2ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_default_call</definition>
        <argsstring>(ml_state_t *Frame, ml_value_t *Value, int Count, ml_value_t **Args)</argsstring>
        <name>ml_default_call</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Frame</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="83" column="6" declfile="src/ml_types.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga73bf3edecce945aeb176908e1964ba0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_default_assign</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Ref, ml_value_t *Value)</argsstring>
        <name>ml_default_assign</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Ref</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="88" column="6" declfile="src/ml_types.h" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacfe7c1e1fdbe42a6efcc012624860e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ml_type_hash</definition>
        <argsstring>(ml_type_t *Type)</argsstring>
        <name>ml_type_hash</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="90" column="6" declfile="src/ml_types.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga98eaed4815f6143a34777b5a61f11588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_type_call</definition>
        <argsstring>(ml_state_t *Caller, ml_type_t *Type, int Count, ml_value_t **Args)</argsstring>
        <name>ml_type_call</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="91" column="6" declfile="src/ml_types.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf447eee515bb03533aa7d65b1b4fd379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_type_init</definition>
        <argsstring>(ml_type_t *Type,...) __attribute__((sentinel))</argsstring>
        <name>ml_type_init</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="124" column="6" declfile="src/ml_types.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaeca7d2568ebec62d0b16da0b097031fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_type</definition>
        <argsstring>(ml_type_t *Parent, const char *Name)</argsstring>
        <name>ml_type</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Parent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="126" column="11" declfile="src/ml_types.h" declline="126" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafb0a9a93d11052f18df791a72f1deeb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * ml_type_name</definition>
        <argsstring>(const ml_type_t *Value)</argsstring>
        <name>ml_type_name</name>
        <param>
          <type>const <ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="127" column="26" bodyfile="src/ml_types.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8c748aae794a8370aa9be9d69e938333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_type_add_parent</definition>
        <argsstring>(ml_type_t *Type, ml_type_t *Parent)</argsstring>
        <name>ml_type_add_parent</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="131" column="6" declfile="src/ml_types.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4aef6aa8c06c2d2a78c6ba4281a19778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_union_type</definition>
        <argsstring>(int NumTypes, ml_type_t *Types[])</argsstring>
        <name>ml_union_type</name>
        <param>
          <type>int</type>
          <declname>NumTypes</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Types</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="135" column="11" declfile="src/ml_types.h" declline="135" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf7611032ed61297d0a0125c510dc7116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_type_add_rule</definition>
        <argsstring>(ml_type_t *Type, ml_type_t *Parent,...) __attribute__((sentinel))</argsstring>
        <name>ml_type_add_rule</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Parent</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="181" column="6" declfile="src/ml_types.h" declline="181" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga31dcf4e36e428a9bdb3f24aa4125d622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_is_subtype</definition>
        <argsstring>(ml_type_t *Type1, ml_type_t *Type2) __attribute__((pure))</argsstring>
        <name>ml_is_subtype</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type1</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="184" column="5" declfile="src/ml_types.h" declline="184" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga32fff35fe6deaa7e50c9865f3ea0bc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_type_max</definition>
        <argsstring>(ml_type_t *Type1, ml_type_t *Type2)</argsstring>
        <name>ml_type_max</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type1</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="185" column="11" declfile="src/ml_types.h" declline="185" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf6122bf865bcb36a39bc84af16d2f2fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>static ml_type_t * ml_typeof</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_typeof</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="248" column="25" bodyfile="src/ml_types.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga33a98fd43f27d80564146dcdad09ca35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_deref</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_deref</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="252" column="26" bodyfile="src/ml_types.h" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0c41a0ba85daa12de59e8306e4d68ad6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>static ml_type_t * ml_typeof_deref</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_typeof_deref</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="259" column="25" bodyfile="src/ml_types.h" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5ce3902ca097a016e92358d2ebb6549c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_is</definition>
        <argsstring>(const ml_value_t *Value, const ml_type_t *Expected)</argsstring>
        <name>ml_is</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>const <ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="269" column="19" bodyfile="src/ml_types.h" bodystart="269" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaa58ad31c484662813dc95ef0410ebb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ml_hash_chain</definition>
        <argsstring>(ml_value_t *Value, ml_hash_chain_t *Chain)</argsstring>
        <name>ml_hash_chain</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structml__hash__chain__t" kindref="compound">ml_hash_chain_t</ref> *</type>
          <declname>Chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="279" column="6" declfile="src/ml_types.h" declline="279" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafb4546b63a830ae505c51c66e3734a4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long ml_hash</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_hash</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="281" column="20" bodyfile="src/ml_types.h" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7e2f917c975783372ba1f6aec5dabfb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * ml_typed_fn_get</definition>
        <argsstring>(ml_type_t *Type, void *TypedFn)</argsstring>
        <name>ml_typed_fn_get</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>TypedFn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="296" column="6" declfile="src/ml_types.h" declline="296" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga17afe233e5fbfafbabe7de73fc448794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_typed_fn_set</definition>
        <argsstring>(ml_type_t *Type, void *TypedFn, void *Function)</argsstring>
        <name>ml_typed_fn_set</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>TypedFn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="297" column="6" declfile="src/ml_types.h" declline="297" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacf7fee9f8e7e1c4d7564eb22e66f9530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_value_set_name</definition>
        <argsstring>(ml_value_t *Value, const char *Name)</argsstring>
        <name>ml_value_set_name</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="321" column="6" declfile="src/ml_types.h" declline="321" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8cb204adc3a8e2d5dd02afb6a3b48f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_value_find_all</definition>
        <argsstring>(ml_value_t *Value, void *Data, ml_value_find_fn RefFn)</argsstring>
        <name>ml_value_find_all</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_value_find_fn</type>
          <declname>RefFn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="327" column="6" declfile="src/ml_types.h" declline="327" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga3f176cd90c96418ab1c256d8bb380f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_value_is_constant</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_value_is_constant</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="329" column="5" declfile="src/ml_types.h" declline="329" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad04a6e6975ecb220982d335f4d2d9ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_count</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Value)</argsstring>
        <name>ml_count</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="335" column="6" declfile="src/ml_types.h" declline="335" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae73f12ecd8e7e2808051e632a4a4be06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_iterate</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Value)</argsstring>
        <name>ml_iterate</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="336" column="6" declfile="src/ml_types.h" declline="336" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac43acf7cb1f818d158117bde4fd04970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_iter_value</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Iter)</argsstring>
        <name>ml_iter_value</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="337" column="6" declfile="src/ml_types.h" declline="337" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac5128aa4a2c0a4ceba680d70e99e9ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_iter_key</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Iter)</argsstring>
        <name>ml_iter_key</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="338" column="6" declfile="src/ml_types.h" declline="338" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad17892853f1c491d8f8f0d1efbeab631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_iter_next</definition>
        <argsstring>(ml_state_t *Caller, ml_value_t *Iter)</argsstring>
        <name>ml_iter_next</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="339" column="6" declfile="src/ml_types.h" declline="339" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4e71d6bf465f811e1ef83213f65876cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_chained</definition>
        <argsstring>(int Count, ml_value_t **Functions)</argsstring>
        <name>ml_chained</name>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Functions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="341" column="12" declfile="src/ml_types.h" declline="341" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae8980ea2a51e8e7d9ae571fe08184bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_chainedv</definition>
        <argsstring>(int Count,...)</argsstring>
        <name>ml_chainedv</name>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="342" column="12" declfile="src/ml_types.h" declline="342" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaec234bd1761198d4c52eaab8bdfddced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_doubled</definition>
        <argsstring>(ml_value_t *Sequence, ml_value_t *Function)</argsstring>
        <name>ml_doubled</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Sequence</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="343" column="12" declfile="src/ml_types.h" declline="343" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaaa4156156c384aba904c797a03b7be8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_function_source</definition>
        <argsstring>(ml_value_t *Value, const char **Source, int *Line)</argsstring>
        <name>ml_function_source</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="349" column="5" declfile="src/ml_types.h" declline="349" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9c81efd40288423d1e8acae51bd8c1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunction</definition>
        <argsstring>(void *Data, ml_callback_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunction</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="388" column="12" declfile="src/ml_types.h" declline="388" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga85482330069324ad9b5acc161e3a739b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionx</definition>
        <argsstring>(void *Data, ml_callbackx_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionx</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="389" column="12" declfile="src/ml_types.h" declline="389" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4c606af9bcd4be9134ba830494070b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionz</definition>
        <argsstring>(void *Data, ml_callbackx_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionz</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="390" column="12" declfile="src/ml_types.h" declline="390" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga63d434a5689d1e2cfa7171d767fb1983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunction2</definition>
        <argsstring>(void *Data, ml_callback_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunction2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="392" column="12" declfile="src/ml_types.h" declline="392" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga045f52290e1962be7119ae333be25d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionx2</definition>
        <argsstring>(void *Data, ml_callbackx_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionx2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="393" column="12" declfile="src/ml_types.h" declline="393" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0c74dca7163bb08568caf976ee5144c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionz2</definition>
        <argsstring>(void *Data, ml_callbackx_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionz2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="394" column="12" declfile="src/ml_types.h" declline="394" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5a30ce9a92200e9d3e18ae5a5a192cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_return_nil</definition>
        <argsstring>(void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_return_nil</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="396" column="12" declfile="src/ml_types.h" declline="396" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaef83dd25fbabc95164ac704ad4244e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_identity</definition>
        <argsstring>(void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_identity</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="397" column="12" declfile="src/ml_types.h" declline="397" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gabde60a890103e06ee3d8fab4a6df0a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_partial_function</definition>
        <argsstring>(ml_value_t *Function, int Count) __attribute__((malloc))</argsstring>
        <name>ml_partial_function</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="399" column="12" declfile="src/ml_types.h" declline="399" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga97c922f87fe3993eca394ae1e0266447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_partial_function_set</definition>
        <argsstring>(ml_value_t *Partial, size_t Index, ml_value_t *Value)</argsstring>
        <name>ml_partial_function_set</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Partial</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Index</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="400" column="12" declfile="src/ml_types.h" declline="400" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga209a3bfec0d894ed059651524985c069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_tuple</definition>
        <argsstring>(size_t Size) __attribute__((malloc))</argsstring>
        <name>ml_tuple</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="467" column="12" declfile="src/ml_types.h" declline="467" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga1dbdb643371c3558c232163c9f6183f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_tuplen</definition>
        <argsstring>(size_t Size, ml_value_t **Values) __attribute__((malloc))</argsstring>
        <name>ml_tuplen</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="468" column="12" declfile="src/ml_types.h" declline="468" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga422faa08aff54a45d1562430ce98ed40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_tuplev</definition>
        <argsstring>(size_t Size,...) __attribute__((malloc))</argsstring>
        <name>ml_tuplev</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="469" column="12" declfile="src/ml_types.h" declline="469" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae55920fd8911b4b2c766d4e43c390d28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_tuple_size</definition>
        <argsstring>(ml_value_t *Tuple)</argsstring>
        <name>ml_tuple_size</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Tuple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="471" column="19" bodyfile="src/ml_types.h" bodystart="471" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab195fb9081c1633279af01cc619ab22e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_tuple_get</definition>
        <argsstring>(ml_value_t *Tuple, int Index)</argsstring>
        <name>ml_tuple_get</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="475" column="26" bodyfile="src/ml_types.h" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga68bd0d9d52370c174da63a9153d8c50a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_tuple_set</definition>
        <argsstring>(ml_value_t *Tuple0, int Index, ml_value_t *Value)</argsstring>
        <name>ml_tuple_set</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Tuple0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="485" column="26" bodyfile="src/ml_types.h" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8f3d07715072ebb78a856e5cbb68348f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_unpack</definition>
        <argsstring>(ml_value_t *Value, int Index)</argsstring>
        <name>ml_unpack</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="492" column="12" declfile="src/ml_types.h" declline="492" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf2917c1df458f0cf9475a531af368362" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_boolean</definition>
        <argsstring>(int Value) __attribute__((const))</argsstring>
        <name>ml_boolean</name>
        <param>
          <type>int</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="506" column="12" declfile="src/ml_types.h" declline="506" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae68130990e046a964dcb7ad9d61c78fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_boolean_value</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((const))</argsstring>
        <name>ml_boolean_value</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="507" column="5" declfile="src/ml_types.h" declline="507" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga68c91b4ebde9c4b9d7616645db7c6ae5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ml_integer_value</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((const))</argsstring>
        <name>ml_integer_value</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="516" column="9" declfile="src/ml_types.h" declline="516" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga02e9388c3bc336c73af0627434e7b853" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ml_real_value</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((const))</argsstring>
        <name>ml_real_value</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="517" column="8" declfile="src/ml_types.h" declline="517" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafe9f7db7c45798d2347843ca905e99c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_integer</definition>
        <argsstring>(int64_t Value) __attribute__((malloc))</argsstring>
        <name>ml_integer</name>
        <param>
          <type>int64_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="569" column="12" declfile="src/ml_types.h" declline="569" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad14069fd889acb05e0511873cf98c484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_real</definition>
        <argsstring>(double Value) __attribute__((malloc))</argsstring>
        <name>ml_real</name>
        <param>
          <type>double</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="570" column="12" declfile="src/ml_types.h" declline="570" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacbf417155859dac0636077db335a130c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ml_integer_value_fast</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_integer_value_fast</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="572" column="16" bodyfile="src/ml_types.h" bodystart="572" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8a391b659bb4df532d7cd113a6c75fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ml_double_value_fast</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_double_value_fast</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="581" column="15" bodyfile="src/ml_types.h" bodystart="581" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacb366b80a6e8dd36c1229e3531c5065d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ml_real_range_count</definition>
        <argsstring>(ml_real_range_t *Range)</argsstring>
        <name>ml_real_range_count</name>
        <param>
          <type><ref refid="structml__real__range__t" kindref="compound">ml_real_range_t</ref> *</type>
          <declname>Range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="618" column="8" declfile="src/ml_types.h" declline="618" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga786e2f2bc4133f0ab328b47f53a04a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GC_vasprintf</definition>
        <argsstring>(char **Ptr, const char *Format, va_list Args)</argsstring>
        <name>GC_vasprintf</name>
        <param>
          <type>char **</type>
          <declname>Ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="622" column="5" declfile="src/ml_types.h" declline="622" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5e678d2c7b8a423641ecab495ad672d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GC_asprintf</definition>
        <argsstring>(char **Ptr, const char *Format,...) __attribute__((format(printf</argsstring>
        <name>GC_asprintf</name>
        <param>
          <type>char **</type>
          <declname>Ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="623" column="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga1cb3bd85bbcbaa372192a9bf18ee0e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_address</definition>
        <argsstring>(const char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_address</name>
        <param>
          <type>const char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="648" column="12" declfile="src/ml_types.h" declline="648" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafa7fa7b08008b5d9b62a3617ba54c65b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * ml_address_value</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_address_value</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="650" column="26" bodyfile="src/ml_types.h" bodystart="650" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac46806f0b7c6747861cc15fd883e87b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t ml_address_length</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_address_length</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="654" column="22" bodyfile="src/ml_types.h" bodystart="654" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf93b9bd18a174bf4bac0149552179a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_buffer</definition>
        <argsstring>(char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_buffer</name>
        <param>
          <type>char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="658" column="12" declfile="src/ml_types.h" declline="658" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaaddd0ff7078b0f1c4e35041865b982e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>static char * ml_buffer_value</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_buffer_value</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="660" column="20" bodyfile="src/ml_types.h" bodystart="660" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad30be565c10094190786beeea7a2e0f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t ml_buffer_length</definition>
        <argsstring>(const ml_value_t *Value)</argsstring>
        <name>ml_buffer_length</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="664" column="22" bodyfile="src/ml_types.h" bodystart="664" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga54b4fdb7f890f70891d399204856977a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_string</definition>
        <argsstring>(const char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_string</name>
        <param>
          <type>const char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="668" column="12" declfile="src/ml_types.h" declline="668" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga77b8d59293a7046704492c8d5c5b56c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_string_copy</definition>
        <argsstring>(const char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_string_copy</name>
        <param>
          <type>const char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="669" column="12" declfile="src/ml_types.h" declline="669" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga3d992fd41e41546701b305ec0c2cf626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_string_format</definition>
        <argsstring>(const char *Format,...) __attribute__((malloc</argsstring>
        <name>ml_string_format</name>
        <param>
          <type>const char *</type>
          <declname>Format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="670" column="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga61a342e0e00ff6922ec7271838e067bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref></type>
        <definition>ml_value_t format</definition>
        <argsstring>(printf, 1, 2)))</argsstring>
        <name>format</name>
        <param>
          <type>printf</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="670" column="33" declfile="src/ml_types.h" declline="670" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga6a9d482555097293399f5c9bc30806af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_regex</definition>
        <argsstring>(const char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_regex</name>
        <param>
          <type>const char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="680" column="12" declfile="src/ml_types.h" declline="680" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaa383bf26cf453db6f3cdc5a2a542c131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_regexi</definition>
        <argsstring>(const char *Value, int Length) __attribute__((malloc))</argsstring>
        <name>ml_regexi</name>
        <param>
          <type>const char *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="681" column="12" declfile="src/ml_types.h" declline="681" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga164105119905996003a097f8864a333d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_regex_pattern</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((pure))</argsstring>
        <name>ml_regex_pattern</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="682" column="12" declfile="src/ml_types.h" declline="682" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga3d67945bae6d7411d5ef1e0b82371407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_regex_match</definition>
        <argsstring>(ml_value_t *Value, const char *Subject, int Length)</argsstring>
        <name>ml_regex_match</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Subject</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="684" column="5" declfile="src/ml_types.h" declline="684" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9eaad83d27d77c00d4c3f0b2ae1fbdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer</definition>
        <argsstring>()</argsstring>
        <name>ml_stringbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="705" column="12" declfile="src/ml_types.h" declline="705" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga32ac71924bcbc14387fe015970e812a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * ml_stringbuffer_writer</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, size_t Length)</argsstring>
        <name>ml_stringbuffer_writer</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="706" column="6" declfile="src/ml_types.h" declline="706" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga127fd4df2e96d4e462e146120aad7f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t ml_stringbuffer_write</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, const char *String, size_t Length)</argsstring>
        <name>ml_stringbuffer_write</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>String</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="707" column="9" declfile="src/ml_types.h" declline="707" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga3b910f14c86d7fdb18f3cf774475094d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t ml_stringbuffer_printf</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, const char *Format,...) __attribute__((format(printf</argsstring>
        <name>ml_stringbuffer_printf</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="708" column="9"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacd4d69ebea6e4de2bf520a127f1db50a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t void</type>
        <definition>ssize_t void ml_stringbuffer_put</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, char Char)</argsstring>
        <name>ml_stringbuffer_put</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>char</type>
          <declname>Char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="709" column="6" declfile="src/ml_types.h" declline="709" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga091de766590ef18b48eeb64fdd39d936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char ml_stringbuffer_last</definition>
        <argsstring>(ml_stringbuffer_t *Buffer)</argsstring>
        <name>ml_stringbuffer_last</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="710" column="6" declfile="src/ml_types.h" declline="710" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab5a92246f9bb2db6106fb1943df8ec79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_stringbuffer_put32</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, uint32_t Code)</argsstring>
        <name>ml_stringbuffer_put32</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>Code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="711" column="6" declfile="src/ml_types.h" declline="711" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga3d289fad4e03330ff3f938ef9a544953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_stringbuffer_append</definition>
        <argsstring>(ml_state_t *Caller, ml_stringbuffer_t *Buffer, ml_value_t *Value)</argsstring>
        <name>ml_stringbuffer_append</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="712" column="6" declfile="src/ml_types.h" declline="712" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7f8281b09ed06b5c88db0b178eb2967b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer_simple_append</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, ml_value_t *Value)</argsstring>
        <name>ml_stringbuffer_simple_append</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="714" column="12" declfile="src/ml_types.h" declline="714" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga43340f5bb19474b6e841313078519c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * ml_stringbuffer_get_string</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_get_string</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="716" column="6" declfile="src/ml_types.h" declline="716" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac641653a059a4d860d3842eb6c606a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * ml_stringbuffer_get_uncollectable</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_get_uncollectable</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="717" column="6" declfile="src/ml_types.h" declline="717" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0ea3054d60ebbce31cf972edb293ef24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer_get_value</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_get_value</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="718" column="12" declfile="src/ml_types.h" declline="718" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac1607695132a335945a3c54788f75c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer_to_address</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_to_address</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="720" column="12" declfile="src/ml_types.h" declline="720" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad6f77ca5620470988e7b0a0cf65293f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer_to_buffer</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_to_buffer</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="721" column="12" declfile="src/ml_types.h" declline="721" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gacd6c670b7e369e84fbf78601b3ff2dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_stringbuffer_to_string</definition>
        <argsstring>(ml_stringbuffer_t *Buffer) __attribute__((malloc))</argsstring>
        <name>ml_stringbuffer_to_string</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="722" column="12" declfile="src/ml_types.h" declline="722" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gabd3d3a7609b71a887b846ce5cda07777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ml_stringbuffer_reader</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, size_t Length)</argsstring>
        <name>ml_stringbuffer_reader</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="724" column="8" declfile="src/ml_types.h" declline="724" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8fa09a9f2e2f27846322376c158c4e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_stringbuffer_drain</definition>
        <argsstring>(ml_stringbuffer_t *Buffer, void *Data, int(*callback)(void *, const char *, size_t))</argsstring>
        <name>ml_stringbuffer_drain</name>
        <param>
          <type><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref> *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int(*)(void *, const char *, size_t)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="726" column="5" declfile="src/ml_types.h" declline="726" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaa7281437346e7b6cbb53df8fd5e0ae0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_list</definition>
        <argsstring>() __attribute__((malloc))</argsstring>
        <name>ml_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="757" column="12" declfile="src/ml_types.h" declline="757" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9c76087e48f2ee66dc365f92cef44395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_list_grow</definition>
        <argsstring>(ml_value_t *List, int Count)</argsstring>
        <name>ml_list_grow</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="758" column="6" declfile="src/ml_types.h" declline="758" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaff078de42a6e7f2e0841d68a2aab991a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_list_push</definition>
        <argsstring>(ml_value_t *List, ml_value_t *Value)</argsstring>
        <name>ml_list_push</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="759" column="6" declfile="src/ml_types.h" declline="759" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9e76fd358ea71d6bf84e89c40201f83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_list_put</definition>
        <argsstring>(ml_value_t *List, ml_value_t *Value)</argsstring>
        <name>ml_list_put</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="760" column="6" declfile="src/ml_types.h" declline="760" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga8847ec6327f4a2c69d9f15f7f3d64b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_list_pop</definition>
        <argsstring>(ml_value_t *List)</argsstring>
        <name>ml_list_pop</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="761" column="12" declfile="src/ml_types.h" declline="761" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab8a03d77d35844f34aba6649a8ceaf0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_list_pull</definition>
        <argsstring>(ml_value_t *List)</argsstring>
        <name>ml_list_pull</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="762" column="12" declfile="src/ml_types.h" declline="762" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7b20fd0a98399a45fb4cb8d9a7ae2c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_list_get</definition>
        <argsstring>(ml_value_t *List, int Index)</argsstring>
        <name>ml_list_get</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="764" column="12" declfile="src/ml_types.h" declline="764" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf4b69b44050e06ab6812964aa056ed91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_list_set</definition>
        <argsstring>(ml_value_t *List, int Index, ml_value_t *Value)</argsstring>
        <name>ml_list_set</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="765" column="12" declfile="src/ml_types.h" declline="765" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf204499ee3d6bfa22fc03391268ab209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_list_to_array</definition>
        <argsstring>(ml_value_t *List, ml_value_t **Array)</argsstring>
        <name>ml_list_to_array</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="769" column="6" declfile="src/ml_types.h" declline="769" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga35e8472a3620c74e9aa5dfe90d4cff29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_list_foreach</definition>
        <argsstring>(ml_value_t *List, void *Data, int(*callback)(ml_value_t *, void *))</argsstring>
        <name>ml_list_foreach</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *, void *)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="770" column="5" declfile="src/ml_types.h" declline="770" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab5b867780f261027b36341c8c4239c37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_length</definition>
        <argsstring>(ml_value_t *List)</argsstring>
        <name>ml_list_length</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="772" column="19" bodyfile="src/ml_types.h" bodystart="772" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga23782e82f4b3622fda806dad0ac8e96a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_iter_forward</definition>
        <argsstring>(ml_value_t *List0, ml_list_iter_t *Iter)</argsstring>
        <name>ml_list_iter_forward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List0</declname>
        </param>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="781" column="19" bodyfile="src/ml_types.h" bodystart="781" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga54ec589cc743666f2aaf32e0f2c45686" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_iter_next</definition>
        <argsstring>(ml_list_iter_t *Iter)</argsstring>
        <name>ml_list_iter_next</name>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="792" column="19" bodyfile="src/ml_types.h" bodystart="792" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gabc2d8a5e3d29971e7c5cfe554699cdf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_iter_backward</definition>
        <argsstring>(ml_value_t *List0, ml_list_iter_t *Iter)</argsstring>
        <name>ml_list_iter_backward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>List0</declname>
        </param>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="801" column="19" bodyfile="src/ml_types.h" bodystart="801" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga33d25b87282ab468a44ad321478e6759" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_iter_prev</definition>
        <argsstring>(ml_list_iter_t *Iter)</argsstring>
        <name>ml_list_iter_prev</name>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="812" column="19" bodyfile="src/ml_types.h" bodystart="812" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac73e993951191ef83ee46a8617d9c949" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_list_iter_valid</definition>
        <argsstring>(ml_list_iter_t *Iter)</argsstring>
        <name>ml_list_iter_valid</name>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="821" column="19" bodyfile="src/ml_types.h" bodystart="821" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga180daa9ffd89687a9aaea09ff6eb64d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ml_list_iter_update</definition>
        <argsstring>(ml_list_iter_t *Iter, ml_value_t *Value)</argsstring>
        <name>ml_list_iter_update</name>
        <param>
          <type><ref refid="structml__list__iter__t" kindref="compound">ml_list_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="825" column="20" bodyfile="src/ml_types.h" bodystart="825" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5571269414087dfb17cd8d5d72504252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method</definition>
        <argsstring>(const char *Name)</argsstring>
        <name>ml_method</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="850" column="12" declfile="src/ml_types.h" declline="850" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad9aa68147963a0690e92a916c727a989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_anon</definition>
        <argsstring>(const char *Name)</argsstring>
        <name>ml_method_anon</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="851" column="12" declfile="src/ml_types.h" declline="851" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga19f325e8e1304f08be11e3609f0e8019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_method_name</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((pure))</argsstring>
        <name>ml_method_name</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="852" column="12" declfile="src/ml_types.h" declline="852" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7993cead32f8dc82c0f45126da33139d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_by_name</definition>
        <argsstring>(const char *Method, void *Data, ml_callback_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_method_by_name</name>
        <param>
          <type>const char *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="854" column="6" declfile="src/ml_types.h" declline="854" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4f75a1ae7a10ad6b9915123cb149eaa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_by_value</definition>
        <argsstring>(void *Method, void *Data, ml_callback_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_method_by_value</name>
        <param>
          <type>void *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="855" column="6" declfile="src/ml_types.h" declline="855" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5283c9c135b1f0f630c0bdc9f14ba50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methodx_by_name</definition>
        <argsstring>(const char *Method, void *Data, ml_callbackx_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_methodx_by_name</name>
        <param>
          <type>const char *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="857" column="6" declfile="src/ml_types.h" declline="857" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga023ab25dad2f59ad18b6335b6490ea09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methodx_by_value</definition>
        <argsstring>(void *Method, void *Data, ml_callbackx_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_methodx_by_value</name>
        <param>
          <type>void *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="858" column="6" declfile="src/ml_types.h" declline="858" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga97c748378d2d0beddd1257339e9c9e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_define</definition>
        <argsstring>(ml_value_t *Value, ml_value_t *Function, int Count, ml_type_t *Variadic, ml_type_t **Types)</argsstring>
        <name>ml_method_define</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="860" column="6" declfile="src/ml_types.h" declline="860" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac14ba6a54132392a062940c5869b60e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_definev</definition>
        <argsstring>(ml_value_t *Method, ml_value_t *Function, ml_type_t *Variadic,...)</argsstring>
        <name>ml_method_definev</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="861" column="6" declfile="src/ml_types.h" declline="861" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf62b9fef1c9ea9cff9bdc4311e791523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_insert</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, ml_value_t *Callback, int Count, ml_type_t *Variadic, ml_type_t **Types)</argsstring>
        <name>ml_method_insert</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Callback</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="863" column="6" declfile="src/ml_types.h" declline="863" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4749f3a2ba36e4fb969cc36e9663241e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_search</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_search</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="865" column="12" declfile="src/ml_types.h" declline="865" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga96179f90b5f275e78c26660bc7d66b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_wrap</definition>
        <argsstring>(ml_value_t *Function, int Count, ml_type_t **Types)</argsstring>
        <name>ml_method_wrap</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="867" column="12" declfile="src/ml_types.h" declline="867" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0fc75673f96ebaf344f82a82ceb54c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
        <definition>ml_method_cached_t * ml_method_search_cached</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_search_cached</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="880" column="20" declfile="src/ml_types.h" declline="880" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac937fb4182678394b7e81c509eb2cba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
        <definition>ml_method_cached_t * ml_method_check_cached</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, ml_method_cached_t *Cached, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_check_cached</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
          <declname>Cached</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="881" column="20" declfile="src/ml_types.h" declline="881" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga95135eb838866e7e3623d2a00ee64067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_no_method_error</definition>
        <argsstring>(ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_no_method_error</name>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="883" column="12" declfile="src/ml_types.h" declline="883" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae187218fb2bf92e53a38147b004566e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_type_constructor</definition>
        <argsstring>(ml_type_t *Type)</argsstring>
        <name>ml_type_constructor</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="889" column="26" bodyfile="src/ml_types.h" bodystart="889" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gabc6275f4b80281f55c49139cb8195235" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_nop</definition>
        <argsstring>(void *Value)</argsstring>
        <name>ml_nop</name>
        <param>
          <type>void *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="905" column="26" bodyfile="src/ml_types.h" bodystart="905" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4720570cf52d415113f148571dc0c592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methods_prevent_changes</definition>
        <argsstring>(ml_methods_t *Methods, int PreventChanges)</argsstring>
        <name>ml_methods_prevent_changes</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type>int</type>
          <declname>PreventChanges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="949" column="6" declfile="src/ml_types.h" declline="949" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab2d202d7abdf90638c17cdfd6cb9effd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_methods_t *</type>
        <definition>ml_methods_t * ml_methods_context</definition>
        <argsstring>(ml_context_t *Context)</argsstring>
        <name>ml_methods_context</name>
        <param>
          <type><ref refid="structml__context__t" kindref="compound">ml_context_t</ref> *</type>
          <declname>Context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="950" column="14" declfile="src/ml_types.h" declline="950" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga488973bb4835adb4f74272a570a9c683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_map</definition>
        <argsstring>() __attribute__((malloc))</argsstring>
        <name>ml_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="985" column="12" declfile="src/ml_types.h" declline="985" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga6637e5809f7eb214b0ccacf1c1ff72fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_map_search</definition>
        <argsstring>(ml_value_t *Map, ml_value_t *Key)</argsstring>
        <name>ml_map_search</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="986" column="12" declfile="src/ml_types.h" declline="986" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae8459a95da82a24ea789b1e5c3759f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_map_search0</definition>
        <argsstring>(ml_value_t *Map, ml_value_t *Key)</argsstring>
        <name>ml_map_search0</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="987" column="12" declfile="src/ml_types.h" declline="987" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga656bdbfb05bde620eba9e9b931f1364b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__map__node__t" kindref="compound">ml_map_node_t</ref> *</type>
        <definition>ml_map_node_t * ml_map_slot</definition>
        <argsstring>(ml_value_t *Map, ml_value_t *Key)</argsstring>
        <name>ml_map_slot</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="988" column="15" declfile="src/ml_types.h" declline="988" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac36caa284934fbb1722ef6df50f3f572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_map_insert</definition>
        <argsstring>(ml_value_t *Map, ml_value_t *Key, ml_value_t *Value)</argsstring>
        <name>ml_map_insert</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="989" column="12" declfile="src/ml_types.h" declline="989" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga89438b672d525d7dcd309d855b0d1464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_map_delete</definition>
        <argsstring>(ml_value_t *Map, ml_value_t *Key)</argsstring>
        <name>ml_map_delete</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="990" column="12" declfile="src/ml_types.h" declline="990" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga339f66b30b960ba1ddb3c313c17fb5c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_size</definition>
        <argsstring>(ml_value_t *Map)</argsstring>
        <name>ml_map_size</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="992" column="19" bodyfile="src/ml_types.h" bodystart="992" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga731d31bdecddcb6dd540dfd1b1c5c952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_map_foreach</definition>
        <argsstring>(ml_value_t *Map, void *Data, int(*callback)(ml_value_t *, ml_value_t *, void *))</argsstring>
        <name>ml_map_foreach</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *, void *)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="996" column="5" declfile="src/ml_types.h" declline="996" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga768a2c795ad3145b0246c7a34841dae9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_iter_forward</definition>
        <argsstring>(ml_value_t *Map0, ml_map_iter_t *Iter)</argsstring>
        <name>ml_map_iter_forward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map0</declname>
        </param>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1003" column="19" bodyfile="src/ml_types.h" bodystart="1003" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad026aec1e3184ae76072dad526243cb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_iter_next</definition>
        <argsstring>(ml_map_iter_t *Iter)</argsstring>
        <name>ml_map_iter_next</name>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1015" column="19" bodyfile="src/ml_types.h" bodystart="1015" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab1c3602c547a8c04e361b0259b94ae64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_iter_backward</definition>
        <argsstring>(ml_value_t *Map0, ml_map_iter_t *Iter)</argsstring>
        <name>ml_map_iter_backward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Map0</declname>
        </param>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1026" column="19" bodyfile="src/ml_types.h" bodystart="1026" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gad924a5336fa8dceff4a67c4a45c33bdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_iter_prev</definition>
        <argsstring>(ml_map_iter_t *Iter)</argsstring>
        <name>ml_map_iter_prev</name>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1038" column="19" bodyfile="src/ml_types.h" bodystart="1038" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gabf76a64b19a7d304980f7d163d68406a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_map_iter_valid</definition>
        <argsstring>(ml_map_iter_t *Iter)</argsstring>
        <name>ml_map_iter_valid</name>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1049" column="19" bodyfile="src/ml_types.h" bodystart="1049" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga4b6945b578a7bc43b4db19a1860a9a03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ml_map_iter_update</definition>
        <argsstring>(ml_map_iter_t *Iter, ml_value_t *Value)</argsstring>
        <name>ml_map_iter_update</name>
        <param>
          <type><ref refid="structml__map__iter__t" kindref="compound">ml_map_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1053" column="20" bodyfile="src/ml_types.h" bodystart="1053" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7d99e731e1c61f6fe4f26f1dd6d559a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_names</definition>
        <argsstring>()</argsstring>
        <name>ml_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1064" column="12" declfile="src/ml_types.h" declline="1064" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga5e126a6d8e278926855cca8f1830a6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_names_add</definition>
        <argsstring>(ml_value_t *Names, ml_value_t *Value)</argsstring>
        <name>ml_names_add</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Names</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1065" column="6" declfile="src/ml_types.h" declline="1065" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga448a03019cba8b9038bb1b189a0a738e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_set</definition>
        <argsstring>() __attribute__((malloc))</argsstring>
        <name>ml_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1115" column="12" declfile="src/ml_types.h" declline="1115" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga7698977f9597e949d91ad8c7afd8eb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_set_search</definition>
        <argsstring>(ml_value_t *Set, ml_value_t *Key)</argsstring>
        <name>ml_set_search</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1116" column="12" declfile="src/ml_types.h" declline="1116" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaad9dd2813915306925713868f6e9ab60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_set_search0</definition>
        <argsstring>(ml_value_t *Set, ml_value_t *Key)</argsstring>
        <name>ml_set_search0</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1117" column="12" declfile="src/ml_types.h" declline="1117" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gab8a57deef5878c04c374ecf125ff350b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__set__node__t" kindref="compound">ml_set_node_t</ref> *</type>
        <definition>ml_set_node_t * ml_set_slot</definition>
        <argsstring>(ml_value_t *Set, ml_value_t *Key)</argsstring>
        <name>ml_set_slot</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1118" column="15" declfile="src/ml_types.h" declline="1118" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gae21564f0f998c4155d340f63ac7cf8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_set_insert</definition>
        <argsstring>(ml_value_t *Set, ml_value_t *Key)</argsstring>
        <name>ml_set_insert</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1119" column="12" declfile="src/ml_types.h" declline="1119" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafb96b11863eee5a551d6e5978110149c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_set_delete</definition>
        <argsstring>(ml_value_t *Set, ml_value_t *Key)</argsstring>
        <name>ml_set_delete</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1120" column="12" declfile="src/ml_types.h" declline="1120" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gac1ee42484d69f9d544bfc8135e6d2875" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_size</definition>
        <argsstring>(ml_value_t *Set)</argsstring>
        <name>ml_set_size</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1122" column="19" bodyfile="src/ml_types.h" bodystart="1122" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga2fd49557e044cd50a80f0e39937decb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_set_foreach</definition>
        <argsstring>(ml_value_t *Set, void *Data, int(*callback)(ml_value_t *, void *))</argsstring>
        <name>ml_set_foreach</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *, void *)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1126" column="5" declfile="src/ml_types.h" declline="1126" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9b2711513c8c5b1b16d81b2b1bcda636" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_iter_forward</definition>
        <argsstring>(ml_value_t *Set0, ml_set_iter_t *Iter)</argsstring>
        <name>ml_set_iter_forward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set0</declname>
        </param>
        <param>
          <type><ref refid="structml__set__iter__t" kindref="compound">ml_set_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1133" column="19" bodyfile="src/ml_types.h" bodystart="1133" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0fdbfa30aa90577cebd9608c92e27e81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_iter_next</definition>
        <argsstring>(ml_set_iter_t *Iter)</argsstring>
        <name>ml_set_iter_next</name>
        <param>
          <type><ref refid="structml__set__iter__t" kindref="compound">ml_set_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1144" column="19" bodyfile="src/ml_types.h" bodystart="1144" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga504624918163b5b6c7ef8fdc9db14b08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_iter_backward</definition>
        <argsstring>(ml_value_t *Set0, ml_set_iter_t *Iter)</argsstring>
        <name>ml_set_iter_backward</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Set0</declname>
        </param>
        <param>
          <type><ref refid="structml__set__iter__t" kindref="compound">ml_set_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1154" column="19" bodyfile="src/ml_types.h" bodystart="1154" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0e9972988a1237e0fbbc9050ff71ccc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_iter_prev</definition>
        <argsstring>(ml_set_iter_t *Iter)</argsstring>
        <name>ml_set_iter_prev</name>
        <param>
          <type><ref refid="structml__set__iter__t" kindref="compound">ml_set_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1165" column="19" bodyfile="src/ml_types.h" bodystart="1165" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga47f97e5b63cf20ae78cbc2063bd9f8e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int ml_set_iter_valid</definition>
        <argsstring>(ml_set_iter_t *Iter)</argsstring>
        <name>ml_set_iter_valid</name>
        <param>
          <type><ref refid="structml__set__iter__t" kindref="compound">ml_set_iter_t</ref> *</type>
          <declname>Iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1175" column="19" bodyfile="src/ml_types.h" bodystart="1175" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0bd2e3bd45556bdec0237bee5b0bca87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_module</definition>
        <argsstring>(const char *Path,...) __attribute__((malloc</argsstring>
        <name>ml_module</name>
        <param>
          <type>const char *</type>
          <declname>Path</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1192" column="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga796eb10d4e962bc49be3d495e898ec13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_module_path</definition>
        <argsstring>(ml_value_t *Module) __attribute__((pure))</argsstring>
        <name>ml_module_path</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1193" column="12" declfile="src/ml_types.h" declline="1193" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga9a9edc767a2be7b1571227b4d40f4b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_module_import</definition>
        <argsstring>(ml_value_t *Module, const char *Name) __attribute__((pure))</argsstring>
        <name>ml_module_import</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Module</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1194" column="12" declfile="src/ml_types.h" declline="1194" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga33b4b8ad2b74e2a0c54d78ffe11d82c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_module_export</definition>
        <argsstring>(ml_value_t *Module, const char *Name, ml_value_t *Value)</argsstring>
        <name>ml_module_export</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Module</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1195" column="12" declfile="src/ml_types.h" declline="1195" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf266e5b323fbb09411814763d3b01e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_external</definition>
        <argsstring>(const char *Name, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_external</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1210" column="12" declfile="src/ml_types.h" declline="1210" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga380b46a551115456d5964f87854170f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_externals_get_name</definition>
        <argsstring>(ml_externals_t *Externals, ml_value_t *Value)</argsstring>
        <name>ml_externals_get_name</name>
        <param>
          <type><ref refid="structml__externals__t" kindref="compound">ml_externals_t</ref> *</type>
          <declname>Externals</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1222" column="12" declfile="src/ml_types.h" declline="1222" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gafbbd21d0403b4ff590e5ebf1696a42dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_externals_get_value</definition>
        <argsstring>(ml_externals_t *Externals, const char *Name)</argsstring>
        <name>ml_externals_get_value</name>
        <param>
          <type><ref refid="structml__externals__t" kindref="compound">ml_externals_t</ref> *</type>
          <declname>Externals</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1223" column="12" declfile="src/ml_types.h" declline="1223" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga0f673d48564801f5bf41926ceb9d7d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_externals_add</definition>
        <argsstring>(ml_externals_t *Externals, const char *Name, void *Value)</argsstring>
        <name>ml_externals_add</name>
        <param>
          <type><ref refid="structml__externals__t" kindref="compound">ml_externals_t</ref> *</type>
          <declname>Externals</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1224" column="6" declfile="src/ml_types.h" declline="1224" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga78e180c2c39aaff40016215e9020402b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_externals_default_add</definition>
        <argsstring>(const char *Name, void *Value)</argsstring>
        <name>ml_externals_default_add</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1226" column="6" declfile="src/ml_types.h" declline="1226" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga06ebdfbc1846b43caef6d3d8ee970f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_serialize</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_serialize</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1228" column="12" declfile="src/ml_types.h" declline="1228" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga57aecb5be286c7a71b4b7fb7e355fd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_deserializer_define</definition>
        <argsstring>(const char *Type, ml_deserializer_t Deserializer)</argsstring>
        <name>ml_deserializer_define</name>
        <param>
          <type>const char *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>ml_deserializer_t</type>
          <declname>Deserializer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1232" column="6" declfile="src/ml_types.h" declline="1232" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga532d8b47261157966ec0f0f45db97af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_deserialize</definition>
        <argsstring>(const char *Type, int Count, ml_value_t **Args)</argsstring>
        <name>ml_deserialize</name>
        <param>
          <type>const char *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1233" column="12" declfile="src/ml_types.h" declline="1233" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1gaf40c21abe6f857df644d104ec5417f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_symbol</definition>
        <argsstring>(const char *Name)</argsstring>
        <name>ml_symbol</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1254" column="12" declfile="src/ml_types.h" declline="1254" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__types_1ga2b26ef655ee57ffc1302d73a3f32eb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_types_init</definition>
        <argsstring>(stringmap_t *Globals)</argsstring>
        <name>ml_types_init</name>
        <param>
          <type><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref> *</type>
          <declname>Globals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1270" column="6" declfile="src/ml_types.h" declline="1270" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__types_1ga4a95025b22fbe37ef6fbf37cf178537f" prot="public" static="no">
        <name>_CONCAT2</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>X ## Y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="27" column="9" bodyfile="src/ml_types.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga54e717c978bb45793c9d9da1318d719e" prot="public" static="no">
        <name>CONCAT2</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>_CONCAT2(X, Y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="28" column="9" bodyfile="src/ml_types.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaf4ddcba2ce2eb54447a204777b24e54c" prot="public" static="no">
        <name>_CONCAT3</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <param><defname>Z</defname></param>
        <initializer>X ## Y ## _ ## Z</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="30" column="9" bodyfile="src/ml_types.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga0a22adb9a059331081a444d782b9077d" prot="public" static="no">
        <name>CONCAT3</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <param><defname>Z</defname></param>
        <initializer>_CONCAT3(X, Y, Z)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="31" column="9" bodyfile="src/ml_types.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga6e8bfd47376c6a653bec91700414e17d" prot="public" static="no">
        <name>ml_assert</name>
        <param><defname>CONDITION</defname></param>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="36" column="10" bodyfile="src/ml_types.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga90d2c51a76437d34f4004318cb009986" prot="public" static="no">
        <name>ML_DEF</name>
        <param><defname>NAME</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *NAME = NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="45" column="9" bodyfile="src/ml_types.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga4ccdba772ecdd93c21b6d97b9ead714a" prot="public" static="no">
        <name>ml_default_deref</name>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="86" column="9" bodyfile="src/ml_types.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gab64b848f9428fef3a54d93e4e6098178" prot="public" static="no">
        <name>ML_TYPE_INIT</name>
        <param><defname>CONSTRUCTOR</defname></param>
        <param><defname>PARENTS</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>...</defname></param>
        <initializer>	{ \
	.Type = MLTypeT, \
	.Name = NAME, \
	.hash = ml_default_hash, \
	.call = ml_default_call, \
	.deref = ml_default_deref, \
	.assign = ml_default_assign, \
	.Constructor = CONSTRUCTOR, \
	.TypedFns = {INTHASH_INIT}, \
	.Exports = {STRINGMAP_INIT}, \
	.Rank = 0, \
	.Interface = 0, \
	__VA_ARGS__ \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="93" column="9" bodyfile="src/ml_types.h" bodystart="93" bodyend="106"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga7c3a226569a6b694556e01f6f06a5c4a" prot="public" static="no">
        <name>ML_TYPE</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PARENTS</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>...</defname></param>
        <initializer>static <ref refid="structml__method__t" kindref="compound">ml_method_t</ref> CONCAT2(TYPE, Of)[1] = {{MLMethodT, NAME &quot;::of&quot;}}; \
\
<ref refid="structml__type__t" kindref="compound">ml_type_t</ref> TYPE[1] = {ML_TYPE_INIT((<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *)CONCAT2(TYPE, Of), PARENTS, NAME, __VA_ARGS__)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="110" column="9" bodyfile="src/ml_types.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga3b1bcf398893e1b2fc9981c38f21b3fe" prot="public" static="no">
        <name>ML_INTERFACE</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PARENTS</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>...</defname></param>
        <initializer>ML_TYPE(TYPE, PARENTS, NAME, .Rank = 1, .Interface = 1, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="122" column="9" bodyfile="src/ml_types.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga19b44827df257d2928687b7f86c0c690" prot="public" static="no">
        <name>ML_UNION_TYPE</name>
        <param><defname>TYPE</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *TYPE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="139" column="9" bodyfile="src/ml_types.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaf4659355e52d7e390bf2360aea55b4f9" prot="public" static="no">
        <name>ML_TYPE_ARG</name>
        <param><defname>N</defname></param>
        <initializer>((1L &lt;&lt; 48) + N)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="182" column="9" bodyfile="src/ml_types.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gabad2017408bda59ab086d6b9d8aa0cec" prot="public" static="no">
        <name>ml_call</name>
        <param><defname>CALLER</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>COUNT</defname></param>
        <param><defname>ARGS</defname></param>
        <initializer>	({ \
	ml_assert(CALLER); \
	ml_typeof(VALUE)-&gt;call((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *)CALLER, VALUE, COUNT, ARGS); \
})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="285" column="9" bodyfile="src/ml_types.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga7f5c4b4fdfb4825d792e90553037b89f" prot="public" static="no">
        <name>ml_inline</name>
        <param><defname>STATE</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>COUNT</defname></param>
        <param><defname>ARGS ...</defname></param>
        <initializer>	({ \
	ml_call(STATE, VALUE, COUNT, (<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **)(void *[]){ARGS}); \
})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="290" column="9" bodyfile="src/ml_types.h" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaedb1571262b2e313f971e2bf2885add0" prot="public" static="no">
        <name>ml_assign</name>
        <param><defname>CALLER</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>VALUE2</defname></param>
        <initializer>ml_typeof(VALUE)-&gt;assign((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *)CALLER, VALUE, VALUE2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="294" column="9" bodyfile="src/ml_types.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga9e46f16ce185d739762cce5157bc171c" prot="public" static="no">
        <name>ML_TYPED_FN</name>
        <param><defname>FUNCTION</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>ARGS ...</defname></param>
        <initializer>CONCAT3(FUNCTION ## _, __LINE__, __COUNTER__)(ARGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="301" column="9" bodyfile="src/ml_types.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga3654d4d6a9b36c8546dde1e2851599c1" prot="public" static="no">
        <name>ML_VALUE</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> NAME[1] = {{TYPE}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="309" column="9" bodyfile="src/ml_types.h" bodystart="309" bodyend="310"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga64bb1f6d0bbbcb9bea03819669d1604e" prot="public" static="no">
        <name>ML_CFUNCTION</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref> NAME[1] = {{MLCFunctionT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="374" column="9" bodyfile="src/ml_types.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga227b5050bc72d20694108268021a2ad7" prot="public" static="no">
        <name>ML_CFUNCTIONX</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionXT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="376" column="9" bodyfile="src/ml_types.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaa80dcf7e00158747ebd2f65ac926e560" prot="public" static="no">
        <name>ML_CFUNCTIONZ</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionZT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="378" column="9" bodyfile="src/ml_types.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga235d8aeff01b3c172aa1c81027e7077e" prot="public" static="no">
        <name>ML_FUNCTION2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *FUNCTION(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref> NAME[1] = {{MLCFunctionT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *FUNCTION(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="402" column="9" bodyfile="src/ml_types.h" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga366326b7a43a64ffd54ccc0d7ef1ac84" prot="public" static="no">
        <name>ML_FUNCTION</name>
        <param><defname>NAME</defname></param>
        <initializer>ML_FUNCTION2(NAME, CONCAT3(ml_cfunction_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="408" column="9" bodyfile="src/ml_types.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga946e20842178f2a60afd3795b31852e7" prot="public" static="no">
        <name>ML_FUNCTIONX2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionXT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="410" column="9" bodyfile="src/ml_types.h" bodystart="410" bodyend="414"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga11cfbf18216218691b5b11b903637fe7" prot="public" static="no">
        <name>ML_FUNCTIONX</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>ML_FUNCTIONX2(NAME, CONCAT3(ml_cfunctionx_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="416" column="9" bodyfile="src/ml_types.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga74b53f7d868573993a1ed3638d242413" prot="public" static="no">
        <name>ML_FUNCTIONZ2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionZT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="418" column="9" bodyfile="src/ml_types.h" bodystart="418" bodyend="422"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gadc70b5844bca6ec7333df752bdfb03cc" prot="public" static="no">
        <name>ML_FUNCTIONZ</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>ML_FUNCTIONZ2(NAME, CONCAT3(ml_cfunctionx_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="424" column="9" bodyfile="src/ml_types.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga74c32c04849a0ff149c3d98991af068c" prot="public" static="no">
        <name>ML_CHECK_ARG_TYPE</name>
        <param><defname>N</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>	if (!ml_is(Args[N], TYPE)) { \
		return ml_error(&quot;TypeError&quot;, &quot;Expected %s for argument %d&quot;, TYPE-&gt;Name, N + 1); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="426" column="9" bodyfile="src/ml_types.h" bodystart="426" bodyend="429"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga50ddfec988528d83059fe61515af315e" prot="public" static="no">
        <name>ML_CHECK_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	if (Count &lt; N) { \
		return ml_error(&quot;CallError&quot;, &quot;%d arguments required&quot;, N); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="431" column="9" bodyfile="src/ml_types.h" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga4dd6a2e5bd173dc26541be623c24b315" prot="public" static="no">
        <name>ML_CHECKX_ARG_TYPE</name>
        <param><defname>N</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>	if (!ml_is(Args[N], TYPE)) { \
		ML_ERROR(&quot;TypeError&quot;, &quot;Expected %s for argument %d&quot;, TYPE-&gt;Name, N + 1); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="436" column="9" bodyfile="src/ml_types.h" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaf190c16bb03f1d1ebb8ad401ecfb62dd" prot="public" static="no">
        <name>ML_CHECKX_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	if (Count &lt; N) { \
		ML_ERROR(&quot;CallError&quot;, &quot;%d arguments required&quot;, N); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="441" column="9" bodyfile="src/ml_types.h" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga2f678ebb79879b1de29563b9be033433" prot="public" static="no">
        <name>ML_CONTINUE</name>
        <param><defname>STATE</defname></param>
        <param><defname>VALUE</defname></param>
        <initializer>	{ \
	<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *__State = (<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *)(STATE); \
	<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *__Value = (<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *)(VALUE); \
	return __State-&gt;run(__State, __Value); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="446" column="9" bodyfile="src/ml_types.h" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga072501492fac8511b802686bfe2ab31b" prot="public" static="no">
        <name>ML_RETURN</name>
        <param><defname>VALUE</defname></param>
        <initializer>return Caller-&gt;run(Caller, (<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *)(VALUE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="452" column="9" bodyfile="src/ml_types.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gabf98d973af18ea2e26ac3f4c9ea309d7" prot="public" static="no">
        <name>ML_ERROR</name>
        <param><defname>ARGS...</defname></param>
        <initializer>ML_RETURN(ml_error(ARGS))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="453" column="9" bodyfile="src/ml_types.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga1ee5a3d2b7a860ec2ff5be5c90849a73" prot="public" static="no">
        <name>ml_string_value</name>
        <initializer>ml_address_value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="671" column="9" bodyfile="src/ml_types.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga815174c5b483deb85db51849f6399d99" prot="public" static="no">
        <name>ml_string_length</name>
        <initializer>ml_address_length</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="672" column="9" bodyfile="src/ml_types.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga00ffbc023fa5e4b7f0955e9c8186fc0d" prot="public" static="no">
        <name>ml_cstring</name>
        <param><defname>VALUE</defname></param>
        <initializer>	({ \
	static <ref refid="structml__string__t" kindref="compound">ml_string_t</ref> String ## __COUNTER__ = {MLStringT, VALUE, strlen(VALUE), 0}; \
	(<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *)&amp;String ## __COUNTER__; \
})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="675" column="9" bodyfile="src/ml_types.h" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gab7a772c5189b33ab35eff7bf199dbdd3" prot="public" static="no">
        <name>ML_STRINGBUFFER_NODE_SIZE</name>
        <initializer>248</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="696" column="9" bodyfile="src/ml_types.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga836f4e39a0896b08f52b09d228282169" prot="public" static="no">
        <name>ML_STRINGBUFFER_INIT</name>
        <initializer>(<ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref>){MLStringBufferT, 0,}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="703" column="9" bodyfile="src/ml_types.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga9956634c48adfbe33e862922c620ba78" prot="public" static="no">
        <name>ml_stringbuffer_add</name>
        <initializer>ml_stringbuffer_write</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="730" column="9" bodyfile="src/ml_types.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga10c7c2c1419b703f57a5eb354e354934" prot="public" static="no">
        <name>ml_stringbuffer_addf</name>
        <initializer>ml_stringbuffer_printf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="731" column="9" bodyfile="src/ml_types.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga98c0b1fa775d4f960022c068793f947b" prot="public" static="no">
        <name>ml_stringbuffer_string</name>
        <initializer>ml_stringbuffer_get_string</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="732" column="9" bodyfile="src/ml_types.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga39aa150c5ceab6aa8e605e7284a86038" prot="public" static="no">
        <name>ml_stringbuffer_uncollectable</name>
        <initializer>ml_stringbuffer_get_uncollectable</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="733" column="9" bodyfile="src/ml_types.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gadcd922ef6446903744563cb0fb0baec7" prot="public" static="no">
        <name>ml_stringbuffer_value</name>
        <initializer>ml_stringbuffer_get_value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="734" column="9" bodyfile="src/ml_types.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gab5aff1e40936cafd7d8732c9d75f2852" prot="public" static="no">
        <name>ml_list_append</name>
        <initializer>ml_list_put</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="767" column="9" bodyfile="src/ml_types.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga1789c9ac0f3d673b6a0f5798913d1e80" prot="public" static="no">
        <name>ML_LIST_FOREACH</name>
        <param><defname>LIST</defname></param>
        <param><defname>ITER</defname></param>
        <initializer>	for (<ref refid="structml__list__node__t" kindref="compound">ml_list_node_t</ref> *ITER = ((<ref refid="structml__list__t" kindref="compound">ml_list_t</ref> *)LIST)-&gt;Head; ITER; ITER = ITER-&gt;Next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="829" column="9" bodyfile="src/ml_types.h" bodystart="829" bodyend="830"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga4e28a43d7fae21259fdb7ff92b1dfd57" prot="public" static="no">
        <name>ML_LIST_REVERSE</name>
        <param><defname>LIST</defname></param>
        <param><defname>ITER</defname></param>
        <initializer>	for (<ref refid="structml__list__node__t" kindref="compound">ml_list_node_t</ref> *ITER = ((<ref refid="structml__list__t" kindref="compound">ml_list_t</ref> *)LIST)-&gt;Tail; ITER; ITER = ITER-&gt;Prev)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="832" column="9" bodyfile="src/ml_types.h" bodystart="832" bodyend="833"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaebec330325aff5cbc7d9c9248e2cae4a" prot="public" static="no">
        <name>ML_CATEGORY</name>
        <initializer>&quot;?&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="885" column="9" bodyfile="src/ml_types.h" bodystart="885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga272af7e1f8cd6268a34791a598cf78e7" prot="public" static="no">
        <name>ML_METHOD</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="893" column="9" bodyfile="src/ml_types.h" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga4f204e431d9b7659aee5b331d1b48862" prot="public" static="no">
        <name>ML_METHODX</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="895" column="9" bodyfile="src/ml_types.h" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga0d37680ab8c57d883a4e0ecf54d4a9d4" prot="public" static="no">
        <name>ML_METHODZ</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="897" column="9" bodyfile="src/ml_types.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga4c0b4818638499747eeb9e22180fec5e" prot="public" static="no">
        <name>ML_METHODV</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="899" column="9" bodyfile="src/ml_types.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gabd8f582650b75cb49f7a6361bf7f36c5" prot="public" static="no">
        <name>ML_METHODVX</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="901" column="9" bodyfile="src/ml_types.h" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gadf8e7985d62855ef3943f5e5b89dc8e0" prot="public" static="no">
        <name>ML_METHODVZ</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="903" column="9" bodyfile="src/ml_types.h" bodystart="903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gad14894651f7447fb91025fcbe4f6ecd4" prot="public" static="no">
        <name>ML_METHOD_DECL</name>
        <param><defname>NAME</defname></param>
        <param><defname>METHOD</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *NAME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="909" column="9" bodyfile="src/ml_types.h" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaf0b55a478dd42162aad655cf717e1c1f" prot="public" static="no">
        <name>ML_METHOD_ANON</name>
        <param><defname>NAME</defname></param>
        <param><defname>METHOD</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *NAME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="910" column="9" bodyfile="src/ml_types.h" bodystart="910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gad669c82af39f0527c1bcbf7c767e0708" prot="public" static="no">
        <name>ML_MAP_FOREACH</name>
        <param><defname>MAP</defname></param>
        <param><defname>ITER</defname></param>
        <initializer>	for (<ref refid="structml__map__node__t" kindref="compound">ml_map_node_t</ref> *ITER = ((<ref refid="structml__map__t" kindref="compound">ml_map_t</ref> *)MAP)-&gt;Head; ITER; ITER = ITER-&gt;Next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1057" column="9" bodyfile="src/ml_types.h" bodystart="1057" bodyend="1058"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaecb24121cccbdafb7b0c11694fbc1fac" prot="public" static="no">
        <name>ml_names_length</name>
        <initializer>ml_list_length</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1066" column="9" bodyfile="src/ml_types.h" bodystart="1066" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaf9e68a97ed911530e76a3eb562a01d0b" prot="public" static="no">
        <name>ML_NAMES_CHECK_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	{ \
	int Required = ml_names_length(ml_deref(Args[N])) + N + 1; \
	if (Count &lt; Required) { \
		return ml_error(&quot;CallError&quot;, &quot;%d arguments required&quot;, Required); \
	} \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1068" column="9" bodyfile="src/ml_types.h" bodystart="1068" bodyend="1073"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga37dc66bd2e5157f6d5801bb4705ad9d8" prot="public" static="no">
        <name>ML_NAMES_CHECKX_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	{ \
	int Required = ml_names_length(ml_deref(Args[N])) + N + 1; \
	if (Count &lt; Required) { \
		ML_ERROR(&quot;CallError&quot;, &quot;%d arguments required&quot;, Required); \
	} \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1075" column="9" bodyfile="src/ml_types.h" bodystart="1075" bodyend="1080"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga1a287bc72e9a9d425b1261d1a8ac5e32" prot="public" static="no">
        <name>ML_NAMES_FOREACH</name>
        <param><defname>NAMES</defname></param>
        <param><defname>ITER</defname></param>
        <initializer>ML_LIST_FOREACH(ml_deref(NAMES), ITER)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1082" column="9" bodyfile="src/ml_types.h" bodystart="1082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gad25128a10cd47e15c3e9dc798a04b70c" prot="public" static="no">
        <name>ML_SET_FOREACH</name>
        <param><defname>SET</defname></param>
        <param><defname>ITER</defname></param>
        <initializer>	for (<ref refid="structml__set__node__t" kindref="compound">ml_set_node_t</ref> *ITER = ((<ref refid="structml__set__t" kindref="compound">ml_set_t</ref> *)SET)-&gt;Head; ITER; ITER = ITER-&gt;Next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1179" column="9" bodyfile="src/ml_types.h" bodystart="1179" bodyend="1180"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gaaf7f818d142260cb6609be112d48e874" prot="public" static="no">
        <name>ML_DESERIALIZER</name>
        <param><defname>TYPE</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *CONCAT3(ml_deserializer_, __LINE__, __COUNTER__)(const char *Type, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1237" column="9" bodyfile="src/ml_types.h" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1gac0d196c2db80f2c9104e0e36946fd94c" prot="public" static="no">
        <name>ml_symbol_name</name>
        <param><defname>VALUE</defname></param>
        <initializer>((<ref refid="structml__symbol__t" kindref="compound">ml_symbol_t</ref> *)VALUE)-&gt;Name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1256" column="9" bodyfile="src/ml_types.h" bodystart="1256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga0e78e078ee19501971928a5b118dba70" prot="public" static="no">
        <name>ml_symbol_range_first</name>
        <param><defname>VALUE</defname></param>
        <initializer>((<ref refid="structml__symbol__range__t" kindref="compound">ml_symbol_range_t</ref> *)VALUE)-&gt;First</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1265" column="9" bodyfile="src/ml_types.h" bodystart="1265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__types_1ga7fbf1bf4f31b165e8c04d6941b78b5cf" prot="public" static="no">
        <name>ml_symbol_range_last</name>
        <param><defname>VALUE</defname></param>
        <initializer>((<ref refid="structml__symbol__range__t" kindref="compound">ml_symbol_range_t</ref> *)VALUE)-&gt;Last</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1266" column="9" bodyfile="src/ml_types.h" bodystart="1266" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
