<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="ml__expr__types_8c" kind="file" language="C++">
    <compoundname>ml_expr_types.c</compoundname>
    <includedby refid="ml__compiler_8c" local="yes">src/ml_compiler.c</includedby>
    <sectiondef kind="func">
      <memberdef kind="function" id="ml__expr__types_8c_1ad2e69e6765536243b05209d780a2b105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_expr_type_t</type>
        <definition>ml_expr_type_t mlc_expr_type</definition>
        <argsstring>(mlc_expr_t *Expr)</argsstring>
        <name>mlc_expr_type</name>
        <param>
          <type><ref refid="structmlc__expr__t" kindref="compound">mlc_expr_t</ref> *</type>
          <declname>Expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_expr_types.c" line="1" column="16" bodyfile="src/ml_expr_types.c" bodystart="1" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">ml_expr_type_t<sp/>mlc_expr_type(<ref refid="structmlc__expr__t" kindref="compound">mlc_expr_t</ref><sp/>*Expr)<sp/>{</highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_and_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_AND;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_assign_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_ASSIGN;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_blank_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_BLANK;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_block_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_BLOCK;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_call_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_CALL;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_const_call_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_CONST_CALL;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_debug_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEBUG;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_def_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEF;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_def_in_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEF_IN;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_def_unpack_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEF_UNPACK;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_default_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEFAULT;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_define_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DEFINE;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_delegate_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_DELEGATE;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_each_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_EACH;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_exit_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_EXIT;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_for_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_FOR;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_fun_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_FUN;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_guard_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_GUARD;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_ident_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_IDENT;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_if_config_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_IF_CONFIG;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_if_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_IF;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_inline_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_INLINE;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_it_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_IT;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_let_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_LET;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_let_in_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_LET_IN;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_let_unpack_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_LET_UNPACK;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_list_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_LIST;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_loop_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_LOOP;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_map_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_MAP;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_next_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_NEXT;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_nil_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_NIL;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_not_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_NOT;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_old_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_OLD;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_or_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_OR;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_ref_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_REF;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_ref_in_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_REF_IN;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_ref_unpack_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_REF_UNPACK;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_register_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_REGISTER;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_resolve_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_RESOLVE;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_return_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_RETURN;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_scoped_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_SCOPED;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_string_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_STRING;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_subst_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_SUBST;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_suspend_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_SUSPEND;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_switch_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_SWITCH;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_tuple_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_TUPLE;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_unknown_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_UNKNOWN;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_value_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_VALUE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_var_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_VAR;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_var_in_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_VAR_IN;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_var_type_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_VAR_TYPE;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_var_unpack_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_VAR_UNPACK;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Expr-&gt;compile<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_with_expr_compile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_WITH;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ML_EXPR_UNKNOWN;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ml_expr_types.c"/>
  </compounddef>
</doxygen>
