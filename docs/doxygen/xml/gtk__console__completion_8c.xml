<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="gtk__console__completion_8c" kind="file" language="C++">
    <compoundname>gtk_console_completion.c</compoundname>
    <includes refid="gtk__console__completion_8h" local="yes">gtk_console_completion.h</includes>
    <includes refid="ml__gir_8h" local="yes">ml_gir.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/gtk_console_completion.c</label>
        <link refid="gtk__console__completion_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtk_console_completion.h</label>
        <link refid="gtk__console__completion_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inthash.h</label>
        <link refid="inthash_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>minilang.h</label>
        <link refid="minilang_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ml_compiler.h</label>
        <link refid="ml__compiler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ml_gir.h</label>
        <link refid="ml__gir_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ml_runtime.h</label>
        <link refid="ml__runtime_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ml_types.h</label>
        <link refid="ml__types_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stringmap.h</label>
        <link refid="stringmap_8h_source"/>
      </node>
      <node id="21">
        <label>girepository.h</label>
      </node>
      <node id="3">
        <label>glib-object.h</label>
      </node>
      <node id="4">
        <label>gtksourceview/gtksource.h</label>
      </node>
      <node id="18">
        <label>limits.h</label>
      </node>
      <node id="17">
        <label>ml_config.h</label>
      </node>
      <node id="6">
        <label>setjmp.h</label>
      </node>
      <node id="11">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>stdlib.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__ConsoleCompletionProvider" prot="public">_ConsoleCompletionProvider</innerclass>
    <innerclass refid="structpopulate__info__t" prot="public">populate_info_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="gtk__console__completion_8c_1ab53562005a30423a042ecb974001a3b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gtk_console_completion_provider_interface_init</definition>
        <argsstring>(GtkSourceCompletionProviderIface *Interface)</argsstring>
        <name>gtk_console_completion_provider_interface_init</name>
        <param>
          <type>GtkSourceCompletionProviderIface *</type>
          <declname>Interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="166" column="13" bodyfile="src/gtk_console_completion.c" bodystart="166" bodyend="180" declfile="src/gtk_console_completion.c" declline="9" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1a0fb4206b2a05f6406c29a0c1f1d784f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gtk_console_completion_provider_class_init</definition>
        <argsstring>(ConsoleCompletionProviderClass *klass)</argsstring>
        <name>gtk_console_completion_provider_class_init</name>
        <param>
          <type>ConsoleCompletionProviderClass *</type>
          <declname>klass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="13" column="13" bodyfile="src/gtk_console_completion.c" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1a6f7da8c54e783baa12e39ca53f127174" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gtk_console_completion_provider_init</definition>
        <argsstring>(ConsoleCompletionProvider *Provider)</argsstring>
        <name>gtk_console_completion_provider_init</name>
        <param>
          <type>ConsoleCompletionProvider *</type>
          <declname>Provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="16" column="13" bodyfile="src/gtk_console_completion.c" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1aaa39096b9bc3f144493bc1de0bf72be4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gchar *</type>
        <definition>static gchar * gtk_console_completion_provider_get_name</definition>
        <argsstring>(ConsoleCompletionProvider *Provider)</argsstring>
        <name>gtk_console_completion_provider_get_name</name>
        <param>
          <type>ConsoleCompletionProvider *</type>
          <declname>Provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="19" column="14" bodyfile="src/gtk_console_completion.c" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1a9eed17d525b7e84fe84d1018e1078740" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int populate_fn</definition>
        <argsstring>(const char *Name, void *Value, populate_info_t *Info)</argsstring>
        <name>populate_fn</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structpopulate__info__t" kindref="compound">populate_info_t</ref> *</type>
          <declname>Info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="46" column="12" bodyfile="src/gtk_console_completion.c" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1aca2ec24c3d8dd7b499888b41549c9259" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gtk_console_completion_provider_populate</definition>
        <argsstring>(ConsoleCompletionProvider *Provider, GtkSourceCompletionContext *Context)</argsstring>
        <name>gtk_console_completion_provider_populate</name>
        <param>
          <type>ConsoleCompletionProvider *</type>
          <declname>Provider</declname>
        </param>
        <param>
          <type>GtkSourceCompletionContext *</type>
          <declname>Context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="57" column="13" bodyfile="src/gtk_console_completion.c" bodystart="57" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1a9035bdc1fb3c7d3f5d872b3a37920f3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>static gboolean gtk_console_completion_provider_match</definition>
        <argsstring>(ConsoleCompletionProvider *Provider, GtkSourceCompletionContext *Context)</argsstring>
        <name>gtk_console_completion_provider_match</name>
        <param>
          <type>ConsoleCompletionProvider *</type>
          <declname>Provider</declname>
        </param>
        <param>
          <type>GtkSourceCompletionContext *</type>
          <declname>Context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="121" column="17" bodyfile="src/gtk_console_completion.c" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console__completion_8c_1a6656db99de1e04e11b69214830581b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkSourceCompletionProvider *</type>
        <definition>GtkSourceCompletionProvider * gtk_console_completion_provider</definition>
        <argsstring>(ml_compiler_t *Compiler)</argsstring>
        <name>gtk_console_completion_provider</name>
        <param>
          <type><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref> *</type>
          <declname>Compiler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console_completion.c" line="182" column="29" bodyfile="src/gtk_console_completion.c" bodystart="182" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;gtk_console_completion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_gir.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="struct__ConsoleCompletionProvider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__ConsoleCompletionProvider" kindref="compound">_ConsoleCompletionProvider</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>GObject<sp/>parent_instance;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_completion_provider_interface_init(GtkSourceCompletionProviderIface<sp/>*Interface);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">G_DEFINE_TYPE_WITH_CODE(ConsoleCompletionProvider,<sp/>gtk_console_completion_provider,<sp/>G_TYPE_OBJECT,<sp/>G_IMPLEMENT_INTERFACE(GTK_SOURCE_TYPE_COMPLETION_PROVIDER,<sp/>gtk_console_completion_provider_interface_init))</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_completion_provider_class_init(ConsoleCompletionProviderClass<sp/>*klass)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_completion_provider_init(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gchar<sp/>*gtk_console_completion_provider_get_name(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_strdup(</highlight><highlight class="stringliteral">&quot;console-completion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment">static<sp/>GdkPixbuf<sp/>*console_completion_provider_get_icon(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">}</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">static<sp/>const<sp/>gchar<sp/>*console_completion_provider_get_icon_name(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">}</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">static<sp/>GIcon<sp/>*console_completion_provider_get_gicon(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">}</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structpopulate__info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>gchar<sp/>*Prefix;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>GList<sp/>*Proposals;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PrefixLength;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="structpopulate__info__t" kindref="compound">populate_info_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>populate_fn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Value,<sp/><ref refid="structpopulate__info__t" kindref="compound">populate_info_t</ref><sp/>*Info)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Info-&gt;Prefix)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(Name,<sp/>Info-&gt;Prefix,<sp/>Info-&gt;PrefixLength))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceCompletionItem<sp/>*Item<sp/>=<sp/>gtk_source_completion_item_new();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_item_set_label(Item,<sp/>g_strdup(Name));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_item_set_text(Item,<sp/>g_strdup(Name));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Info-&gt;Proposals<sp/>=<sp/>g_list_prepend(Info-&gt;Proposals,<sp/>Item);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_completion_provider_populate(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionContext<sp/>*Context)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Start;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_context_get_iter(Context,<sp/>&amp;Start);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpopulate__info__t" kindref="compound">populate_info_t</ref><sp/>Info[1];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Info-&gt;Prefix<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Info-&gt;Proposals<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_ends_word(&amp;Start))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Iter<sp/>=<sp/>Start;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_iter_backward_word_start(&amp;Start);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info-&gt;Prefix<sp/>=<sp/>gtk_text_iter_get_text(&amp;Start,<sp/>&amp;Iter);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info-&gt;PrefixLength<sp/>=<sp/>strlen(Info-&gt;Prefix);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End<sp/>=<sp/>Start;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_iter_backward_visible_word_start(&amp;Start);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_iter_backward_chars(&amp;End,<sp/>2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>gchar<sp/>*Name<sp/>=<sp/>gtk_text_iter_get_text(&amp;Start,<sp/>&amp;End);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value<sp/>=<sp/>ml_compiler_lookup(Provider-&gt;Compiler,<sp/>Name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Value)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Iter<sp/>=<sp/>Start;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_text_iter_backward_char(&amp;Iter))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_get_char(&amp;Iter)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_text_iter_backward_char(&amp;Iter))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_get_char(&amp;Iter)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_iter_backward_word_start(&amp;Start);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gchar<sp/>*Name0<sp/>=<sp/>gtk_text_iter_get_text(&amp;Start,<sp/>&amp;Iter);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value0<sp/>=<sp/>ml_compiler_lookup(Provider-&gt;Compiler,<sp/>Name0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free(Name0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Value0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value0,<sp/>MLGlobalT))<sp/>Value0<sp/>=<sp/>ml_global_get(Value0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value0,<sp/>GirTypelibT))<sp/>Value<sp/>=<sp/>ml_gir_import(Value0,<sp/>Name);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value0,<sp/>MLTypeT))<sp/>Value<sp/>=<sp/>stringmap_search(((<ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>*)Value0)-&gt;Exports,<sp/>Name);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>g_free(Name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Value<sp/>&amp;&amp;<sp/>ml_is(Value,<sp/>MLGlobalT))<sp/>Value<sp/>=<sp/>ml_global_get(Value);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Value)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value,<sp/>MLTypeT))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>*Type<sp/>=<sp/>(<ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>*)Value;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringmap_foreach(Type-&gt;Exports,<sp/>Info,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)populate_fn);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value,<sp/>MLModuleT))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__module__t" kindref="compound">ml_module_t</ref><sp/>*Module<sp/>=<sp/>(<ref refid="structml__module__t" kindref="compound">ml_module_t</ref><sp/>*)Value;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringmap_foreach(Module-&gt;Exports,<sp/>Info,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)populate_fn);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(Value,<sp/>GirTypelibT))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Namespace<sp/>=<sp/>ml_gir_get_namespace(Value);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Total<sp/>=<sp/>g_irepository_get_n_infos(NULL,<sp/>Namespace);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Total;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GIBaseInfo<sp/>*Base<sp/>=<sp/>g_irepository_get_info(NULL,<sp/>Namespace,<sp/>I);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name<sp/>=<sp/>g_base_info_get_name(Base);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Info-&gt;Prefix)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(Name,<sp/>Info-&gt;Prefix,<sp/>Info-&gt;PrefixLength))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkSourceCompletionItem<sp/>*Item<sp/>=<sp/>gtk_source_completion_item_new();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_completion_item_set_label(Item,<sp/>g_strdup(Name));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_completion_item_set_text(Item,<sp/>g_strdup(Name));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info-&gt;Proposals<sp/>=<sp/>g_list_prepend(Info-&gt;Proposals,<sp/>Item);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Info-&gt;Prefix)<sp/>g_free(Info-&gt;Prefix);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Info-&gt;Proposals<sp/>=<sp/>g_list_reverse(Info-&gt;Proposals);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_context_add_proposals(Context,<sp/>GTK_SOURCE_COMPLETION_PROVIDER(Provider),<sp/>Info-&gt;Proposals,<sp/>TRUE);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gboolean<sp/>gtk_console_completion_provider_match(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionContext<sp/>*Context)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Iter;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_context_get_iter(Context,<sp/>&amp;Iter);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_ends_word(&amp;Iter))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_text_iter_backward_word_start(&amp;Iter))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_text_iter_backward_char(&amp;Iter))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_get_char(&amp;Iter)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_text_iter_backward_char(&amp;Iter))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_text_iter_get_char(&amp;Iter)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="135"><highlight class="comment">static<sp/>GtkSourceCompletionActivation<sp/>gtk_console_completion_provider_get_activation(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">static<sp/>GtkWidget<sp/>*gtk_console_completion_provider_get_info_widget(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionProposal<sp/>*Proposal)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">}</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">static<sp/>void<sp/>gtk_console_completion_provider_update_info(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionProposal<sp/>*Proposal,<sp/>GtkSourceCompletionInfo<sp/>*Info)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="147"><highlight class="comment">}</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">static<sp/>gboolean<sp/>gtk_console_completion_provider_get_start_iter(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionContext<sp/>*Context,<sp/>GtkSourceCompletionProposal<sp/>*Proposal,<sp/>GtkTextIter<sp/>*Iter)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="151"><highlight class="comment">}</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">static<sp/>gboolean<sp/>gtk_console_completion_provider_activate_proposal(ConsoleCompletionProvider<sp/>*Provider,<sp/>GtkSourceCompletionProposal<sp/>*Proposal,<sp/>GtkTextIter<sp/>*Iter)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="155"><highlight class="comment">}</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment">static<sp/>gint<sp/>gtk_console_completion_provider_get_interactive_delay(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="159"><highlight class="comment">}</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">static<sp/>gint<sp/>gtk_console_completion_provider_get_priority(ConsoleCompletionProvider<sp/>*Provider)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%s()\n&quot;,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="163"><highlight class="comment">}</highlight></codeline>
<codeline lineno="164"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_completion_provider_interface_init(GtkSourceCompletionProviderIface<sp/>*Interface)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>Interface-&gt;get_name<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_completion_provider_get_name;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_icon<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_icon;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_icon_name<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_icon_name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_gicon<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_gicon;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Interface-&gt;populate<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_completion_provider_populate;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Interface-&gt;match<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_completion_provider_match;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_activation<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_activation;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_info_widget<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_info_widget;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;update_info<sp/>=<sp/>(void<sp/>*)console_completion_provider_update_info;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_start_iter<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_start_iter;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;activate_proposal<sp/>=<sp/>(void<sp/>*)console_completion_provider_activate_proposal;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_interactive_delay<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_interactive_delay;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Interface-&gt;get_priority<sp/>=<sp/>(void<sp/>*)console_completion_provider_get_priority;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">GtkSourceCompletionProvider<sp/>*gtk_console_completion_provider(<ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ConsoleCompletionProvider<sp/>*Provider<sp/>=<sp/>g_object_new(CONSOLE_TYPE_COMPLETION_PROVIDER,<sp/>NULL);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Provider-&gt;Compiler<sp/>=<sp/>Compiler;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GTK_SOURCE_COMPLETION_PROVIDER(Provider);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/gtk_console_completion.c"/>
  </compounddef>
</doxygen>
