<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="gtk__console_8c" kind="file" language="C++">
    <compoundname>gtk_console.c</compoundname>
    <includes refid="gtk__console_8h" local="yes">gtk_console.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">gtksourceview/gtksource.h</includes>
    <includes local="no">gdk-pixbuf/gdk-pixbuf.h</includes>
    <includes local="no">girepository.h</includes>
    <includes refid="minilang_8h" local="yes">minilang.h</includes>
    <includes refid="ml__macros_8h" local="yes">ml_macros.h</includes>
    <includes refid="stringmap_8h" local="yes">stringmap.h</includes>
    <includes refid="ml__compiler_8h" local="yes">ml_compiler.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="ml__gir_8h" local="yes">ml_gir.h</includes>
    <includes refid="ml__runtime_8h" local="yes">ml_runtime.h</includes>
    <includes refid="ml__bytecode_8h" local="yes">ml_bytecode.h</includes>
    <includes refid="ml__debugger_8h" local="yes">ml_debugger.h</includes>
    <includes refid="ml__object_8h" local="yes">ml_object.h</includes>
    <includes refid="gtk__console__completion_8h" local="yes">gtk_console_completion.h</includes>
    <includes local="yes">gtk_console_init.c</includes>
    <incdepgraph>
      <node id="1">
        <label>src/gtk_console.c</label>
        <link refid="gtk__console_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtk_console.h</label>
        <link refid="gtk__console_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gtk_console_completion.h</label>
        <link refid="gtk__console__completion_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>inthash.h</label>
        <link refid="inthash_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>minilang.h</label>
        <link refid="minilang_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ml_bytecode.h</label>
        <link refid="ml__bytecode_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ml_compiler.h</label>
        <link refid="ml__compiler_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ml_debugger.h</label>
        <link refid="ml__debugger_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ml_gir.h</label>
        <link refid="ml__gir_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ml_macros.h</label>
        <link refid="ml__macros_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ml_object.h</label>
        <link refid="ml__object_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ml_opcodes.h</label>
        <link refid="ml__opcodes_8h_source"/>
      </node>
      <node id="9">
        <label>ml_runtime.h</label>
        <link refid="ml__runtime_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ml_types.h</label>
        <link refid="ml__types_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stringmap.h</label>
        <link refid="stringmap_8h_source"/>
      </node>
      <node id="25">
        <label>gc/gc.h</label>
      </node>
      <node id="22">
        <label>gdk-pixbuf/gdk-pixbuf.h</label>
      </node>
      <node id="23">
        <label>girepository.h</label>
      </node>
      <node id="33">
        <label>glib-object.h</label>
      </node>
      <node id="3">
        <label>gtk/gtk.h</label>
      </node>
      <node id="34">
        <label>gtk_console_init.c</label>
      </node>
      <node id="21">
        <label>gtksourceview/gtksource.h</label>
      </node>
      <node id="18">
        <label>limits.h</label>
      </node>
      <node id="19">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>ml_config.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="13">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="26">
        <label>sys/stat.h</label>
      </node>
      <node id="20">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structgtk__console__t" prot="public">gtk_console_t</innerclass>
    <innerclass refid="structconsole__open__file__t" prot="public">console_open_file_t</innerclass>
    <innerclass refid="structconsole__show__field__t" prot="public">console_show_field_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="gtk__console_8c_1aebec330325aff5cbc7d9c9248e2cae4a" prot="public" static="no">
        <name>ML_CATEGORY</name>
        <initializer>&quot;gtk_console&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="25" column="10" bodyfile="src/gtk_console.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtk__console_8c_1abf8d8994f09509f9e061f5bf82daf4cd" prot="public" static="no">
        <name>MAX_HISTORY</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="27" column="9" bodyfile="src/gtk_console.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gtk__console_8c_1ab1fa09cff0f24db59dff94e7625bfb28" prot="public" static="no">
        <name>COMMAND_MASK</name>
        <initializer>GDK_CONTROL_MASK</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="529" column="10" bodyfile="src/gtk_console.c" bodystart="529" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="gtk__console_8c_1a7b811da7ee677d4385e2861a253bc116" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * console_global_get</definition>
        <argsstring>(gtk_console_t *Console, const char *Name, const char *Source, int Line, int Eval)</argsstring>
        <name>console_global_get</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Eval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="73" column="19" bodyfile="src/gtk_console.c" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1af1ef5f5d42508fae608d64e7c7443ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_log</definition>
        <argsstring>(gtk_console_t *Console, ml_value_t *Value)</argsstring>
        <name>gtk_console_log</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="83" column="6" bodyfile="src/gtk_console.c" bodystart="83" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a9beadf9463c3b30128ec7eb1116c32d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ML_TYPE</definition>
        <argsstring>(ConsoleT,(), &quot;console&quot;)</argsstring>
        <name>ML_TYPE</name>
        <param>
          <type>ConsoleT</type>
        </param>
        <param>
          <type>()</type>
        </param>
        <param>
          <type>&quot;console&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="130" column="1" declfile="src/gtk_console.c" declline="130" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ab9600d6716f732f0ca9bac066fa6ed7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static __attribute__</definition>
        <argsstring>((noinline))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(noinline)</type>
        </param>
        <briefdescription>
<para>internal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="133" column="8" bodyfile="src/gtk_console.c" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a9f29b3068a89924c5cf5b693fe463c2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ml_console_repl_run</definition>
        <argsstring>(gtk_console_t *Console, ml_value_t *Result)</argsstring>
        <name>ml_console_repl_run</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="140" column="13" bodyfile="src/gtk_console.c" bodystart="140" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a7cb1812e56dd23b16c356d9d4b688fc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_step_in</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_step_in</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="154" column="13" bodyfile="src/gtk_console.c" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a5352225bb3fe6def26b82b7a3be8405e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_step_over</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_step_over</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="162" column="13" bodyfile="src/gtk_console.c" bodystart="162" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ac930f9fbaaf37ef009ee84e72799456d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_step_out</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_step_out</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="170" column="13" bodyfile="src/gtk_console.c" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ab64332e6c7874c595a7182eea2582774" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_continue</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_continue</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="178" column="13" bodyfile="src/gtk_console.c" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1aef3982414068ce8f2b064f1df711bb58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_continue_all</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_continue_all</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="186" column="13" bodyfile="src/gtk_console.c" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1af676b5618838f3682bfd3adc4f872e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_evaluate</definition>
        <argsstring>(gtk_console_t *Console, const char *Text)</argsstring>
        <name>gtk_console_evaluate</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="194" column="6" bodyfile="src/gtk_console.c" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a4694317149b2721812e328e0c21b6346" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_submit</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_submit</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="202" column="13" bodyfile="src/gtk_console.c" bodystart="202" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a2a5deafcfefe80b3d9ce74b92098715b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_breakpoint_toggle</definition>
        <argsstring>(GtkSourceView *View, GtkTextIter *Iter, GdkEvent *Event, console_open_file_t *OpenFile)</argsstring>
        <name>console_breakpoint_toggle</name>
        <param>
          <type>GtkSourceView *</type>
          <declname>View</declname>
        </param>
        <param>
          <type>GtkTextIter *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type>GdkEvent *</type>
          <declname>Event</declname>
        </param>
        <param>
          <type><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref> *</type>
          <declname>OpenFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="241" column="13" bodyfile="src/gtk_console.c" bodystart="241" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a1afed241d4c82d6c32f290c7fb46e3ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * console_open_source</definition>
        <argsstring>(gtk_console_t *Console, const char *SourceName)</argsstring>
        <name>console_open_source</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>SourceName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="263" column="18" bodyfile="src/gtk_console.c" bodystart="263" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1af80e81175e283ad2d38abb7f33c234ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int console_debug_set_breakpoints</definition>
        <argsstring>(const char *SourceName, console_open_file_t *OpenFile, ml_value_t *BreakpointSet)</argsstring>
        <name>console_debug_set_breakpoints</name>
        <param>
          <type>const char *</type>
          <declname>SourceName</declname>
        </param>
        <param>
          <type><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref> *</type>
          <declname>OpenFile</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>BreakpointSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="311" column="12" bodyfile="src/gtk_console.c" bodystart="311" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a6b513a689947e4c18b9a6e6d2a71a18a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_show_value</definition>
        <argsstring>(GtkTreeStore *Store, GtkTreeIter *Iter, const char *Name, ml_value_t *Value)</argsstring>
        <name>console_show_value</name>
        <param>
          <type>GtkTreeStore *</type>
          <declname>Store</declname>
        </param>
        <param>
          <type>GtkTreeIter *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="324" column="13" bodyfile="src/gtk_console.c" bodystart="324" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a3f3d05adce532994e8c534183302a027" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ML_TYPED_FN</definition>
        <argsstring>(console_show_value, MLListT, GtkTreeStore *Store, GtkTreeIter *Iter, const char *Name, ml_value_t *Value)</argsstring>
        <name>ML_TYPED_FN</name>
        <param>
          <type>console_show_value</type>
        </param>
        <param>
          <type>MLListT</type>
        </param>
        <param>
          <type>GtkTreeStore *</type>
          <declname>Store</declname>
        </param>
        <param>
          <type>GtkTreeIter *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="340" column="13" bodyfile="src/gtk_console.c" bodystart="340" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1abeb51a6833004df5f9112a20ae600324" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ML_TYPED_FN</definition>
        <argsstring>(console_show_value, MLMapT, GtkTreeStore *Store, GtkTreeIter *Iter, const char *Name, ml_value_t *Value)</argsstring>
        <name>ML_TYPED_FN</name>
        <param>
          <type>console_show_value</type>
        </param>
        <param>
          <type>MLMapT</type>
        </param>
        <param>
          <type>GtkTreeStore *</type>
          <declname>Store</declname>
        </param>
        <param>
          <type>GtkTreeIter *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="353" column="13" bodyfile="src/gtk_console.c" bodystart="353" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a1b2226a6745f351f9ca28cd3fdfd7730" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int console_show_field</definition>
        <argsstring>(const char *Name, ml_value_t *Value, console_show_field_t *Show)</argsstring>
        <name>console_show_field</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structconsole__show__field__t" kindref="compound">console_show_field_t</ref> *</type>
          <declname>Show</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="374" column="12" bodyfile="src/gtk_console.c" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1af8f8959ac2d485323e498deab34e6700" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ML_TYPED_FN</definition>
        <argsstring>(console_show_value, MLObjectT, GtkTreeStore *Store, GtkTreeIter *Iter, const char *Name, ml_value_t *Value)</argsstring>
        <name>ML_TYPED_FN</name>
        <param>
          <type>console_show_value</type>
        </param>
        <param>
          <type>MLObjectT</type>
        </param>
        <param>
          <type>GtkTreeStore *</type>
          <declname>Store</declname>
        </param>
        <param>
          <type>GtkTreeIter *</type>
          <declname>Iter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="379" column="13" bodyfile="src/gtk_console.c" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ab9bb4e81db8e8690de00d8cdf2101ab3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_show_thread</definition>
        <argsstring>(gtk_console_t *Console, const char *SourceName, int Line)</argsstring>
        <name>console_show_thread</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>SourceName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="387" column="13" bodyfile="src/gtk_console.c" bodystart="387" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a2e4eb36fd0effd4513fa13a3fc818b17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_thread_activated</definition>
        <argsstring>(GtkTreeView *ThreadView, GtkTreePath *Path, GtkTreeViewColumn *Column, gtk_console_t *Console)</argsstring>
        <name>console_thread_activated</name>
        <param>
          <type>GtkTreeView *</type>
          <declname>ThreadView</declname>
        </param>
        <param>
          <type>GtkTreePath *</type>
          <declname>Path</declname>
        </param>
        <param>
          <type>GtkTreeViewColumn *</type>
          <declname>Column</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="428" column="13" bodyfile="src/gtk_console.c" bodystart="428" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ad480173250794eb359ae13a570c675ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_debug_enter</definition>
        <argsstring>(gtk_console_t *Console, interactive_debugger_t *Debugger, ml_source_t Source, int Index)</argsstring>
        <name>console_debug_enter</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref> *</type>
          <declname>Debugger</declname>
        </param>
        <param>
          <type><ref refid="structml__source__t" kindref="compound">ml_source_t</ref></type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="441" column="13" bodyfile="src/gtk_console.c" bodystart="441" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a9ef738c8c5a91c99855f6c58ce4fb9cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_debug_exit</definition>
        <argsstring>(gtk_console_t *Console, interactive_debugger_t *Debugger, ml_state_t *Caller, int Index)</argsstring>
        <name>console_debug_exit</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref> *</type>
          <declname>Debugger</declname>
        </param>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="452" column="13" bodyfile="src/gtk_console.c" bodystart="452" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a591d38b62427689a9256717face1d445" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_clear</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>console_clear</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="474" column="13" bodyfile="src/gtk_console.c" bodystart="474" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1afa2c0613d0f6a27b35396fdb5e9e5e18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void toggle_layout</definition>
        <argsstring>(GtkWidget *Button, gtk_console_t *Console)</argsstring>
        <name>toggle_layout</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Button</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="482" column="13" bodyfile="src/gtk_console.c" bodystart="482" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1aeb593949c248582acabeacc8bcfbd571" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_style_changed</definition>
        <argsstring>(GtkSourceStyleSchemeChooser *Widget, GParamSpec *Spec, gtk_console_t *Console)</argsstring>
        <name>console_style_changed</name>
        <param>
          <type>GtkSourceStyleSchemeChooser *</type>
          <declname>Widget</declname>
        </param>
        <param>
          <type>GParamSpec *</type>
          <declname>Spec</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="493" column="13" bodyfile="src/gtk_console.c" bodystart="493" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a4f62f83668c5775ced32bfa1ecb059ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_font_changed</definition>
        <argsstring>(GtkFontChooser *Widget, gtk_console_t *Console)</argsstring>
        <name>console_font_changed</name>
        <param>
          <type>GtkFontChooser *</type>
          <declname>Widget</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="504" column="13" bodyfile="src/gtk_console.c" bodystart="504" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a2409a3c9f874bd61e5bc4430e6926f78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_size_allocate</definition>
        <argsstring>(GtkWindow *Window, GdkRectangle *Allocation, gtk_console_t *Console)</argsstring>
        <name>console_size_allocate</name>
        <param>
          <type>GtkWindow *</type>
          <declname>Window</declname>
        </param>
        <param>
          <type>GdkRectangle *</type>
          <declname>Allocation</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="515" column="13" bodyfile="src/gtk_console.c" bodystart="515" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ac8f726725a0b31e2e6de0cf5aaaef3d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>static gboolean console_keypress</definition>
        <argsstring>(GtkWidget *Widget, GdkEventKey *Event, gtk_console_t *Console)</argsstring>
        <name>console_keypress</name>
        <param>
          <type>GtkWidget *</type>
          <declname>Widget</declname>
        </param>
        <param>
          <type>GdkEventKey *</type>
          <declname>Event</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="532" column="17" bodyfile="src/gtk_console.c" bodystart="532" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a61ccc621bccc38732668e868cf39991f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_show</definition>
        <argsstring>(gtk_console_t *Console, GtkWindow *Parent)</argsstring>
        <name>gtk_console_show</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>GtkWindow *</type>
          <declname>Parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="626" column="6" bodyfile="src/gtk_console.c" bodystart="626" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ae85dc8471575c880c30215d896430672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gtk_console_append</definition>
        <argsstring>(gtk_console_t *Console, const char *Buffer, int Length)</argsstring>
        <name>gtk_console_append</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="633" column="5" bodyfile="src/gtk_console.c" bodystart="633" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a4976bceb0ce3175145673aa3ce9fb0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * gtk_console_print</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>gtk_console_print</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="657" column="12" bodyfile="src/gtk_console.c" bodystart="657" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a0e00a3d2ef94027c844e58f65863bb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * gtk_console_display</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>gtk_console_display</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="671" column="12" bodyfile="src/gtk_console.c" bodystart="671" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a12fbc245939630d9a853413954caf94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_printf</definition>
        <argsstring>(gtk_console_t *Console, const char *Format,...)</argsstring>
        <name>gtk_console_printf</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="678" column="6" bodyfile="src/gtk_console.c" bodystart="678" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a5012332564fc2d7d90e57800f45fbe7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * console_set_font</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>console_set_font</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="688" column="19" bodyfile="src/gtk_console.c" bodystart="688" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1aeca95ed8815a0d8d1334757df417a235" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * console_set_style</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>console_set_style</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="700" column="19" bodyfile="src/gtk_console.c" bodystart="700" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1aa784a99afcb450fe774eb2fa2c3f4537" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * console_add_cycle</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>console_add_cycle</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="710" column="19" bodyfile="src/gtk_console.c" bodystart="710" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a4e18c05ebe3b0f56ec00ec455a140aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * console_add_combo</definition>
        <argsstring>(gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>console_add_combo</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="721" column="19" bodyfile="src/gtk_console.c" bodystart="721" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a7b8658b036231c5676dc2a0d03540247" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_included_run</definition>
        <argsstring>(ml_state_t *State, ml_value_t *Value)</argsstring>
        <name>console_included_run</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>State</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="730" column="13" bodyfile="src/gtk_console.c" bodystart="730" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a49a6a99ec6d9b1d4a4393f83e5828adb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void console_include_fnx</definition>
        <argsstring>(ml_state_t *Caller, gtk_console_t *Console, int Count, ml_value_t **Args)</argsstring>
        <name>console_include_fnx</name>
        <param>
          <type><ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *</type>
          <declname>Caller</declname>
        </param>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="736" column="13" bodyfile="src/gtk_console.c" bodystart="736" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1ab4f66efeec610bbf529e006f60dcee58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>static gboolean console_update_status</definition>
        <argsstring>(gtk_console_t *Console)</argsstring>
        <name>console_update_status</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="746" column="17" bodyfile="src/gtk_console.c" bodystart="746" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1aabe8cf4c5a610f89b5b053b8d2d568c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
        <definition>gtk_console_t * gtk_console</definition>
        <argsstring>(ml_context_t *Context, ml_getter_t GlobalGet, void *Globals)</argsstring>
        <name>gtk_console</name>
        <param>
          <type><ref refid="structml__context__t" kindref="compound">ml_context_t</ref> *</type>
          <declname>Context</declname>
        </param>
        <param>
          <type>ml_getter_t</type>
          <declname>GlobalGet</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Globals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="791" column="15" bodyfile="src/gtk_console.c" bodystart="791" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a0ad92cc292237e5eac880a8e264d0d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_load_file</definition>
        <argsstring>(gtk_console_t *Console, const char *FileName, ml_value_t *Args)</argsstring>
        <name>gtk_console_load_file</name>
        <param>
          <type><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref> *</type>
          <declname>Console</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>FileName</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="1070" column="6" bodyfile="src/gtk_console.c" bodystart="1070" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="gtk__console_8c_1a3847f68f0d7c98eba61649b84a173ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gtk_console_init</definition>
        <argsstring>()</argsstring>
        <name>gtk_console_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/gtk_console.c" line="1076" column="6" bodyfile="src/gtk_console.c" bodystart="1076" bodyend="1078"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;gtk_console.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtksourceview/gtksource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gdk-pixbuf/gdk-pixbuf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;girepository.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;minilang.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_macros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stringmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_compiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_gir.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_bytecode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_debugger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtk_console_completion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ML_CATEGORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ML_CATEGORY<sp/>&quot;gtk_console&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_HISTORY<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structgtk__console__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>Base;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*Window,<sp/>*LogScrolled,<sp/>*LogView,<sp/>*InputView;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*DebugButtons,<sp/>*SourceView,<sp/>*FrameView,<sp/>*ThreadView,<sp/>*Paned;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkListStore<sp/>*ThreadStore;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeStore<sp/>*FrameStore;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkNotebook<sp/>*Notebook;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceLanguage<sp/>*Language;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceStyleScheme<sp/>*StyleScheme;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkLabel<sp/>*MemoryBar;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextTag<sp/>*OutputTag,<sp/>*ResultTag,<sp/>*ErrorTag,<sp/>*BinaryTag;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextMark<sp/>*EndMark;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceBuffer<sp/>*SourceBuffer;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_getter_t<sp/>ParentGetter;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ParentGlobals;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref><sp/>*Debugger;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ConfigPath;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*FontName;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>GKeyFile<sp/>*Config;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>PangoFontDescription<sp/>*FontDescription;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*History[MAX_HISTORY];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HistoryIndex,<sp/>HistoryEnd;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref><sp/>Globals[1];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref><sp/>OpenFiles[1];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref><sp/>Cycles[1];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref><sp/>Combos[1];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>gint<sp/>WindowSize[2];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Chars[32];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumChars;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DisplayOutput;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MINGW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stpcpy(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Source)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*Source)<sp/>*Dest++<sp/>=<sp/>*Source++;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Dest;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lstat<sp/>stat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*console_global_get(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Line,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Eval)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;Debugger)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value<sp/>=<sp/>interactive_debugger_get(Console-&gt;Debugger,<sp/>Name);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value<sp/>=<sp/>stringmap_search(Console-&gt;Globals,<sp/>Name);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Console-&gt;ParentGetter)(Console-&gt;ParentGlobals,<sp/>Name,<sp/>Source,<sp/>Line,<sp/>Eval);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_log(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is_error(Value))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Buffer;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>GC_asprintf(&amp;Buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ml_error_type(Value),<sp/>ml_error_message(Value));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Buffer,<sp/>Length,<sp/>Console-&gt;ErrorTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__source__t" kindref="compound">ml_source_t</ref><sp/>Source;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ml_error_source(Value,<sp/>Level++,<sp/>&amp;Source))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>=<sp/>GC_asprintf(&amp;Buffer,<sp/></highlight><highlight class="stringliteral">&quot;\t%s:%d\n&quot;</highlight><highlight class="normal">,<sp/>Source.Name,<sp/>Source.Line);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Buffer,<sp/>Length,<sp/>Console-&gt;ErrorTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*String<sp/>=<sp/>ml_simple_inline(MLStringT,<sp/>1,<sp/>Value);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is(String,<sp/>MLStringT))<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Buffer<sp/>=<sp/>ml_string_value(String);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>ml_string_length(String);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>&gt;<sp/>10240)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Text[32];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextLength<sp/>=<sp/>sprintf(Text,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%d<sp/>bytes&gt;&quot;</highlight><highlight class="normal">,<sp/>Length);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Text,<sp/>TextLength,<sp/>Console-&gt;ResultTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_utf8_validate(Buffer,<sp/>Length,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Buffer,<sp/>Length,<sp/>Console-&gt;ResultTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Length;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>HexChars[16]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Bytes[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>??&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Byte<sp/>=<sp/>Buffer[I];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bytes[1]<sp/>=<sp/>HexChars[Byte<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bytes[2]<sp/>=<sp/>HexChars[Byte<sp/>&amp;<sp/>15];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Bytes,<sp/>3,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>Console-&gt;ResultTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Buffer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>GC_asprintf(&amp;Buffer,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>ml_typeof(Value)-&gt;Name);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Buffer,<sp/>Length,<sp/>Console-&gt;ResultTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_scroll_mark_onscreen(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>Console-&gt;EndMark);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">ML_TYPE(ConsoleT,<sp/>(),<sp/></highlight><highlight class="stringliteral">&quot;console&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__attribute__<sp/>((noinline))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_new_line(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ml_console_repl_run(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Result)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Result<sp/>==<sp/>MLEndOfInput)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_widget_grab_focus(Console-&gt;InputView);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;DisplayOutput<sp/>||<sp/>ml_is_error(Result))<sp/>gtk_console_log(Console,<sp/>Result);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>console_new_line(Console);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is_error(Result))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_widget_grab_focus(Console-&gt;InputView);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Console-&gt;Parser,<sp/>Console-&gt;Compiler);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_step_in(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/></highlight><highlight class="stringliteral">&quot;step_in()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_step_over(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/></highlight><highlight class="stringliteral">&quot;step_over()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_step_out(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/></highlight><highlight class="stringliteral">&quot;step_out()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_continue(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/></highlight><highlight class="stringliteral">&quot;continue()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_continue_all(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/></highlight><highlight class="stringliteral">&quot;continue_all()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_evaluate(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Text)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__parser__t" kindref="compound">ml_parser_t</ref><sp/>*Parser<sp/>=<sp/>Console-&gt;Parser;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__compiler__t" kindref="compound">ml_compiler_t</ref><sp/>*Compiler<sp/>=<sp/>Console-&gt;Compiler;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga80d3e6fba963ca8b9e7638e278420df0" kindref="member">ml_parser_reset</ref>(Parser);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__compiler_1ga21c894dfe870f9461194a9168b4dd2fc" kindref="member">ml_parser_input</ref>(Parser,<sp/>Text);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_command_evaluate((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>Parser,<sp/>Compiler);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_submit(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*InputBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>InputStart[1],<sp/>InputEnd[1];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_highlight_matching_brackets(GTK_SOURCE_BUFFER(InputBuffer),<sp/>FALSE);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_bounds(InputBuffer,<sp/>InputStart,<sp/>InputEnd);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Text<sp/>=<sp/>gtk_text_buffer_get_text(InputBuffer,<sp/>InputStart,<sp/>InputEnd,<sp/>FALSE);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HistoryEnd<sp/>=<sp/>Console-&gt;HistoryEnd;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;History[HistoryEnd]<sp/>=<sp/>GC_strdup(Text);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;HistoryIndex<sp/>=<sp/>Console-&gt;HistoryEnd<sp/>=<sp/>(HistoryEnd<sp/>+<sp/>1)<sp/>%<sp/>MAX_HISTORY;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_create_source_mark(GTK_SOURCE_BUFFER(LogBuffer),<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>End);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_range(LogBuffer,<sp/>End,<sp/>InputStart,<sp/>InputEnd);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>-1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_set_text(InputBuffer,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*SourceBuffer<sp/>=<sp/>GTK_TEXT_BUFFER(Console-&gt;SourceBuffer);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(SourceBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(SourceBuffer,<sp/>End,<sp/>Text,<sp/>-1);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(SourceBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>-1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_highlight_matching_brackets(GTK_SOURCE_BUFFER(InputBuffer),<sp/>TRUE);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GtkTextIter<sp/>End[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_console_evaluate(Console,<sp/>Text);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structconsole__open__file__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Name;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*View;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}<sp/><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_breakpoint_toggle(GtkSourceView<sp/>*View,<sp/>GtkTextIter<sp/>*Iter,<sp/>GdkEvent<sp/>*Event,<sp/><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref><sp/>*OpenFile)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*Buffer<sp/>=<sp/>gtk_text_iter_get_buffer(Iter);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>GSList<sp/>*Marks<sp/>=<sp/>gtk_source_buffer_get_source_marks_at_iter(GTK_SOURCE_BUFFER(Buffer),<sp/>Iter,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref><sp/>*Debugger<sp/>=<sp/>OpenFile-&gt;Console-&gt;Debugger;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*BreakpointFn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Marks)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextMark<sp/>*Mark<sp/>=<sp/>GTK_TEXT_MARK(Marks-&gt;data);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_delete_mark(Buffer,<sp/>Mark);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Debugger)<sp/>BreakpointFn<sp/>=<sp/>interactive_debugger_get(Debugger,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint_clear&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_free(Marks);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_buffer_create_source_mark(GTK_SOURCE_BUFFER(Buffer),<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint&quot;</highlight><highlight class="normal">,<sp/>Iter);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Debugger)<sp/>BreakpointFn<sp/>=<sp/>interactive_debugger_get(Debugger,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint_set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BreakpointFn)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args<sp/>=<sp/>ml_alloc_args(2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args[0]<sp/>=<sp/>OpenFile-&gt;Name;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args[1]<sp/>=<sp/>ml_integer(gtk_text_iter_get_line(Iter)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_simple_call(BreakpointFn,<sp/>2,<sp/>Args);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*console_open_source(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SourceName)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref><sp/>**Slot<sp/>=<sp/>(<ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref><sp/>**)stringmap_slot(Console-&gt;OpenFiles,<sp/>SourceName);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Slot[0])<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref><sp/>*OpenFile<sp/>=<sp/>Slot[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenFile-&gt;Console<sp/>=<sp/>Console;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenFile-&gt;Name<sp/>=<sp/>ml_string(SourceName,<sp/>-1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkSourceBuffer<sp/>*Buffer<sp/>=<sp/>gtk_source_buffer_new_with_language(Console-&gt;Language);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(Buffer,<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(GTK_TEXT_BUFFER(Buffer),<sp/>End);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*File<sp/>=<sp/>fopen(SourceName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(File)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Text[128];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Length;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>=<sp/>fread(Text,<sp/>1,<sp/>128,<sp/>File);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(GTK_TEXT_BUFFER(Buffer),<sp/>End,<sp/>Text,<sp/>Length);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>128);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(File);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkWidget<sp/>*View<sp/>=<sp/>gtk_source_view_new_with_buffer(Buffer);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenFile-&gt;View<sp/>=<sp/>View;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkWidget<sp/>*Scrolled<sp/>=<sp/>gtk_scrolled_window_new(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(Scrolled),<sp/>View);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_view_set_monospace(GTK_TEXT_VIEW(View),<sp/>TRUE);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_view_set_editable(GTK_TEXT_VIEW(View),<sp/>FALSE);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_widget_override_font(View,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_view_set_tab_width(GTK_SOURCE_VIEW(View),<sp/>4);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_view_set_highlight_current_line(GTK_SOURCE_VIEW(View),<sp/>TRUE);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_view_set_show_line_numbers(GTK_SOURCE_VIEW(View),<sp/>TRUE);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_view_set_show_line_marks(GTK_SOURCE_VIEW(View),<sp/>TRUE);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkSourceMarkAttributes<sp/>*BreakpointMarkAttributes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BreakpointMarkAttributes)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BreakpointMarkAttributes<sp/>=<sp/>gtk_source_mark_attributes_new();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_mark_attributes_set_icon_name(BreakpointMarkAttributes,<sp/></highlight><highlight class="stringliteral">&quot;media-record&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_view_set_mark_attributes(GTK_SOURCE_VIEW(View),<sp/></highlight><highlight class="stringliteral">&quot;breakpoint&quot;</highlight><highlight class="normal">,<sp/>BreakpointMarkAttributes,<sp/>0);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(View),<sp/></highlight><highlight class="stringliteral">&quot;line-mark-activated&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_breakpoint_toggle),<sp/>OpenFile);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_notebook_append_page(Console-&gt;Notebook,<sp/>Scrolled,<sp/>gtk_label_new(SourceName));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_widget_show_all(GTK_WIDGET(Console-&gt;Notebook));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Slot[0]-&gt;View;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>console_debug_set_breakpoints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SourceName,<sp/><ref refid="structconsole__open__file__t" kindref="compound">console_open_file_t</ref><sp/>*OpenFile,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*BreakpointSet)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args<sp/>=<sp/>ml_alloc_args(2);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>Args[0]<sp/>=<sp/>OpenFile-&gt;Name;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*Buffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(OpenFile-&gt;View));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Iter[1];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_start_iter(Buffer,<sp/>Iter);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gtk_source_buffer_forward_iter_to_source_mark(GTK_SOURCE_BUFFER(Buffer),<sp/>Iter,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args[1]<sp/>=<sp/>ml_integer(gtk_text_iter_get_line(Iter)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_simple_call(BreakpointSet,<sp/>2,<sp/>Args);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_show_value(GtkTreeStore<sp/>*Store,<sp/>GtkTreeIter<sp/>*Iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>typeof(console_show_value)<sp/>*function<sp/>=<sp/>ml_typed_fn_get(ml_typeof(Value),<sp/>console_show_value);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(function)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>function(Store,<sp/>Iter,<sp/>Name,<sp/>Value);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref><sp/>Buffer[1]<sp/>=<sp/>{ML_STRINGBUFFER_INIT};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_stringbuffer_simple_append(Buffer,<sp/>Value);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Display;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer-&gt;Length<sp/>&lt;<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Display<sp/>=<sp/>ml_stringbuffer_get_string(Buffer);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Display<sp/>=<sp/>snew(68);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(Display,<sp/>Buffer-&gt;Head-&gt;Chars,<sp/>64);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(Display<sp/>+<sp/>64,<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Store,<sp/>NULL,<sp/>Iter,<sp/>-1,<sp/>0,<sp/>Name,<sp/>1,<sp/>Display,<sp/>-1);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ML_TYPED_FN(console_show_value,<sp/>MLListT,<sp/>GtkTreeStore<sp/>*Store,<sp/>GtkTreeIter<sp/>*Iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Child[1];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Display;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_asprintf(&amp;Display,<sp/></highlight><highlight class="stringliteral">&quot;list[%d]&quot;</highlight><highlight class="normal">,<sp/>ml_list_length(Value));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Store,<sp/>Child,<sp/>Iter,<sp/>-1,<sp/>0,<sp/>Name,<sp/>1,<sp/>Display,<sp/>-1);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_LIST_FOREACH(Value,<sp/>Iter)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++Index<sp/>&gt;<sp/>20)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GC_asprintf(&amp;Display,<sp/></highlight><highlight class="stringliteral">&quot;[%d]&quot;</highlight><highlight class="normal">,<sp/>Index);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_show_value(Store,<sp/>Child,<sp/>Display,<sp/>Iter-&gt;Value);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ML_TYPED_FN(console_show_value,<sp/>MLMapT,<sp/>GtkTreeStore<sp/>*Store,<sp/>GtkTreeIter<sp/>*Iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Child[1];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Display;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_asprintf(&amp;Display,<sp/></highlight><highlight class="stringliteral">&quot;map[%d]&quot;</highlight><highlight class="normal">,<sp/>ml_map_size(Value));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Store,<sp/>Child,<sp/>Iter,<sp/>-1,<sp/>0,<sp/>Name,<sp/>1,<sp/>Display,<sp/>-1);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_MAP_FOREACH(Value,<sp/>Iter)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++Index<sp/>&gt;<sp/>20)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GC_asprintf(&amp;Display,<sp/></highlight><highlight class="stringliteral">&quot;[%d]&quot;</highlight><highlight class="normal">,<sp/>Index);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Child2[1];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Store,<sp/>Child2,<sp/>Child,<sp/>-1,<sp/>0,<sp/>Display,<sp/>-1);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_show_value(Store,<sp/>Child2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/>Iter-&gt;Key);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_show_value(Store,<sp/>Child2,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>Iter-&gt;Value);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="structconsole__show__field__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeStore<sp/>*Store;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>*Child;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}<sp/><ref refid="structconsole__show__field__t" kindref="compound">console_show_field_t</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>console_show_field(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value,<sp/><ref refid="structconsole__show__field__t" kindref="compound">console_show_field_t</ref><sp/>*Show)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>console_show_value(Show-&gt;Store,<sp/>Show-&gt;Child,<sp/>Name,<sp/>Value);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ML_TYPED_FN(console_show_value,<sp/>MLObjectT,<sp/>GtkTreeStore<sp/>*Store,<sp/>GtkTreeIter<sp/>*Iter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Name,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>*Class<sp/>=<sp/>ml_typeof(Value);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Child[1];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Store,<sp/>Child,<sp/>Iter,<sp/>-1,<sp/>0,<sp/>Name,<sp/>1,<sp/>ml_type_name(Class),<sp/>-1);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structconsole__show__field__t" kindref="compound">console_show_field_t</ref><sp/>Show[1]<sp/>=<sp/>{{Store,<sp/>Child}};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_object_foreach(Value,<sp/>Show,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)console_show_field);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_show_thread(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SourceName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Line)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*SourceView;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(SourceName,<sp/>Console-&gt;Name))<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceView<sp/>=<sp/>Console-&gt;SourceView;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceView<sp/>=<sp/>console_open_source(Console,<sp/>SourceName);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*BreakpointSet<sp/>=<sp/>interactive_debugger_get(Console-&gt;Debugger,<sp/></highlight><highlight class="stringliteral">&quot;breakpoint_set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_foreach(Console-&gt;OpenFiles,<sp/>BreakpointSet,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)console_debug_set_breakpoints);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PageNum<sp/>=<sp/>gtk_notebook_page_num(Console-&gt;Notebook,<sp/>gtk_widget_get_parent(SourceView));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_notebook_set_current_page(Console-&gt;Notebook,<sp/>PageNum);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*Buffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(SourceView));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>LineBeg[1],<sp/>LineEnd[1];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_line(Buffer,<sp/>LineBeg,<sp/>Line<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_line(Buffer,<sp/>LineEnd,<sp/>Line);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gtk_text_buffer_apply_tag(Buffer,<sp/>PausedTag,<sp/>LineBeg,<sp/>LineEnd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_place_cursor(Buffer,<sp/>LineBeg);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_scroll_to_iter(GTK_TEXT_VIEW(SourceView),<sp/>LineBeg,<sp/>0.0,<sp/>FALSE,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_clear(Console-&gt;FrameStore);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*FramesGet<sp/>=<sp/>interactive_debugger_get(Console-&gt;Debugger,<sp/></highlight><highlight class="stringliteral">&quot;frames&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*LocalsGet<sp/>=<sp/>interactive_debugger_get(Console-&gt;Debugger,<sp/></highlight><highlight class="stringliteral">&quot;locals&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Frames<sp/>=<sp/>ml_simple_call(FramesGet,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args<sp/>=<sp/>ml_alloc_args(1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_LIST_FOREACH(Frames,<sp/>Iter1)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Source;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GC_asprintf(&amp;Source,<sp/></highlight><highlight class="stringliteral">&quot;%s:%ld&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_string_value(ml_tuple_get(Iter1-&gt;Value,<sp/>1)),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_integer_value(ml_tuple_get(Iter1-&gt;Value,<sp/>2))</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>TreeIter[1];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_tree_store_insert_with_values(Console-&gt;FrameStore,<sp/>TreeIter,<sp/>NULL,<sp/>-1,<sp/>0,<sp/>Source,<sp/>-1);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args[0]<sp/>=<sp/>ml_integer(Depth++);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Locals<sp/>=<sp/>ml_simple_call(LocalsGet,<sp/>1,<sp/>Args);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_MAP_FOREACH(Locals,<sp/>Iter2)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_show_value(Console-&gt;FrameStore,<sp/>TreeIter,<sp/>ml_string_value(Iter2-&gt;Key),<sp/>ml_deref(Iter2-&gt;Value));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_expand_all(GTK_TREE_VIEW(Console-&gt;FrameView));</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_thread_activated(GtkTreeView<sp/>*ThreadView,<sp/>GtkTreePath<sp/>*Path,<sp/>GtkTreeViewColumn<sp/>*Column,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SourceName;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index,<sp/>Line;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Iter[1];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_model_get_iter(GTK_TREE_MODEL(Console-&gt;ThreadStore),<sp/>Iter,<sp/>Path);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_model_get(GTK_TREE_MODEL(Console-&gt;ThreadStore),<sp/>Iter,<sp/>0,<sp/>&amp;Index,<sp/>1,<sp/>&amp;SourceName,<sp/>2,<sp/>&amp;Line,<sp/>-1);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*ThreadSet<sp/>=<sp/>interactive_debugger_get(Console-&gt;Debugger,<sp/></highlight><highlight class="stringliteral">&quot;thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args<sp/>=<sp/>ml_alloc_args(1);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>Args[0]<sp/>=<sp/>ml_integer(Index);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_simple_call(ThreadSet,<sp/>1,<sp/>Args);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>console_show_thread(Console,<sp/>SourceName,<sp/>Line);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_debug_enter(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref><sp/>*Debugger,<sp/><ref refid="structml__source__t" kindref="compound">ml_source_t</ref><sp/>Source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_show(Console-&gt;DebugButtons);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Debugger<sp/>=<sp/>Debugger;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_console_printf(Console,<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>break<sp/>[%d]:<sp/>%s:%d\n&quot;</highlight><highlight class="normal">,<sp/>Index,<sp/>Source.Name,<sp/>Source.Line);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Iter[1];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_list_store_insert_with_values(Console-&gt;ThreadStore,<sp/>Iter,<sp/>-1,<sp/>0,<sp/>Index,<sp/>1,<sp/>Source.Name,<sp/>2,<sp/>Source.Line,<sp/>-1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeSelection<sp/>*Selection<sp/>=<sp/>gtk_tree_view_get_selection(GTK_TREE_VIEW(Console-&gt;ThreadView));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_selection_select_iter(Selection,<sp/>Iter);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>console_show_thread(Console,<sp/>Source.Name,<sp/>Source.Line);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_debug_exit(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/><ref refid="structinteractive__debugger__t" kindref="compound">interactive_debugger_t</ref><sp/>*Debugger,<sp/><ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*Caller,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeIter<sp/>Iter[1];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTreeModel<sp/>*Model<sp/>=<sp/>GTK_TREE_MODEL(Console-&gt;ThreadStore);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gtk_tree_model_get_iter_first(Model,<sp/>Iter))<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_tree_model_get(Model,<sp/>Iter,<sp/>0,<sp/>&amp;Index0,<sp/>-1);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Index0<sp/>==<sp/>Index)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_list_store_remove(Console-&gt;ThreadStore,<sp/>Iter);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gtk_tree_model_iter_next(Model,<sp/>Iter));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_store_clear(Console-&gt;FrameStore);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gtk_tree_model_iter_n_children(Model,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_widget_hide(Console-&gt;DebugButtons);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Select<sp/>another<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTreeSelection<sp/>*Selection<sp/>=<sp/>gtk_tree_view_get_selection(GTK_TREE_VIEW(Console-&gt;ThreadView));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_tree_selection_unselect_all(Selection);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interactive_debugger_resume(Debugger,<sp/>Index);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_clear(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Start[1],<sp/>End[1];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_start_iter(LogBuffer,<sp/>Start);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_delete(LogBuffer,<sp/>Start,<sp/>End);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toggle_layout(GtkWidget<sp/>*Button,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(gtk_orientable_get_orientation(GTK_ORIENTABLE(Console-&gt;Paned)))<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GTK_ORIENTATION_HORIZONTAL:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_orientable_set_orientation(GTK_ORIENTABLE(Console-&gt;Paned),<sp/>GTK_ORIENTATION_VERTICAL);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GTK_ORIENTATION_VERTICAL:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_orientable_set_orientation(GTK_ORIENTABLE(Console-&gt;Paned),<sp/>GTK_ORIENTATION_HORIZONTAL);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_style_changed(GtkSourceStyleSchemeChooser<sp/>*Widget,<sp/>GParamSpec<sp/>*Spec,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;StyleScheme<sp/>=<sp/>gtk_source_style_scheme_chooser_get_style_scheme(Widget);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(GTK_SOURCE_BUFFER(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView))),<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(GTK_SOURCE_BUFFER(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView))),<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*StyleId<sp/>=<sp/>gtk_source_style_scheme_get_id(Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>g_key_file_set_string(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">,<sp/>StyleId);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>g_key_file_save_to_file(Console-&gt;Config,<sp/>Console-&gt;ConfigPath,<sp/>NULL);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_font_changed(GtkFontChooser<sp/>*Widget,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>gchar<sp/>*FontName<sp/>=<sp/>gtk_font_chooser_get_font(Widget);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;FontName<sp/>=<sp/>FontName;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;FontDescription<sp/>=<sp/>pango_font_description_from_string(FontName);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;InputView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;LogView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>g_key_file_set_string(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;font&quot;</highlight><highlight class="normal">,<sp/>FontName);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>g_key_file_save_to_file(Console-&gt;Config,<sp/>Console-&gt;ConfigPath,<sp/>NULL);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_size_allocate(GtkWindow<sp/>*Window,<sp/>GdkRectangle<sp/>*Allocation,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>gint<sp/>Width,<sp/>Height;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_get_size(Window,<sp/>&amp;Width,<sp/>&amp;Height);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Width<sp/>!=<sp/>Console-&gt;WindowSize[0]<sp/>||<sp/>Height<sp/>!=<sp/>Console-&gt;WindowSize[1])<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[0]<sp/>=<sp/>Width;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[1]<sp/>=<sp/>Height;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_key_file_set_integer_list(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>Console-&gt;WindowSize,<sp/>2);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_key_file_save_to_file(Console-&gt;Config,<sp/>Console-&gt;ConfigPath,<sp/>NULL);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMAND_MASK<sp/>GDK_META_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMAND_MASK<sp/>GDK_CONTROL_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gboolean<sp/>console_keypress(GtkWidget<sp/>*Widget,<sp/>GdkEventKey<sp/>*Event,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Event-&gt;keyval)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Return:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event-&gt;state<sp/>&amp;<sp/>COMMAND_MASK)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console_submit(NULL,<sp/>Console);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Up:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event-&gt;state<sp/>&amp;<sp/>COMMAND_MASK)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HistoryIndex<sp/>=<sp/>(Console-&gt;HistoryIndex<sp/>+<sp/>MAX_HISTORY<sp/>-<sp/>1)<sp/>%<sp/>MAX_HISTORY;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;History[HistoryIndex])<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_set_text(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView)),<sp/>Console-&gt;History[HistoryIndex],<sp/>-1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;HistoryIndex<sp/>=<sp/>HistoryIndex;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Down:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event-&gt;state<sp/>&amp;<sp/>COMMAND_MASK)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HistoryIndex<sp/>=<sp/>(Console-&gt;HistoryIndex<sp/>+<sp/>1)<sp/>%<sp/>MAX_HISTORY;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;History[HistoryIndex])<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_set_text(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView)),<sp/>Console-&gt;History[HistoryIndex],<sp/>-1);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;HistoryIndex<sp/>=<sp/>HistoryIndex;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_set_text(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView)),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;HistoryIndex<sp/>=<sp/>Console-&gt;HistoryEnd;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Escape:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Left:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Right:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_BackSpace:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;NumChars<sp/>&gt;<sp/>0)<sp/>--Console-&gt;NumChars;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GDK_KEY_Tab:<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;Chars[Console-&gt;NumChars]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Console-&gt;NumChars;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Cycle<sp/>=<sp/>stringmap_search(Console-&gt;Cycles,<sp/>Console-&gt;Chars<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Cycle)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Start[1],<sp/>End[1];</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*InputBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextMark<sp/>*Cursor<sp/>=<sp/>gtk_text_buffer_get_insert(InputBuffer);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_mark(InputBuffer,<sp/>Start,<sp/>Cursor);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_mark(InputBuffer,<sp/>End,<sp/>Cursor);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_iter_backward_chars(Start,<sp/>g_utf8_strlen(Console-&gt;Chars<sp/>+<sp/>I,<sp/>Console-&gt;NumChars<sp/>-<sp/>I));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>stpcpy(Console-&gt;Chars<sp/>+<sp/>I,<sp/>Cycle)<sp/>-<sp/>Console-&gt;Chars;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_delete(InputBuffer,<sp/>Start,<sp/>End);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(InputBuffer,<sp/>Start,<sp/>Console-&gt;Chars<sp/>+<sp/>I,<sp/>Console-&gt;NumChars<sp/>-<sp/>I);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guint32<sp/>Unichar<sp/>=<sp/>gdk_keyval_to_unicode(Event-&gt;keyval);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Unichar)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Unichar<sp/>&lt;=<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>+=<sp/>g_unichar_to_utf8(Unichar,<sp/>Console-&gt;Chars<sp/>+<sp/>Console-&gt;NumChars);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Console-&gt;NumChars<sp/>&gt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(Console-&gt;Chars,<sp/>Console-&gt;Chars<sp/>+<sp/>Console-&gt;NumChars<sp/>-<sp/>16,<sp/>16);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;Chars[Console-&gt;NumChars]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Console-&gt;NumChars;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Combo<sp/>=<sp/>stringmap_search(Console-&gt;Combos,<sp/>Console-&gt;Chars<sp/>+<sp/>I);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Combo)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextIter<sp/>Start[1],<sp/>End[1];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*InputBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkTextMark<sp/>*Cursor<sp/>=<sp/>gtk_text_buffer_get_insert(InputBuffer);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_mark(InputBuffer,<sp/>Start,<sp/>Cursor);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_get_iter_at_mark(InputBuffer,<sp/>End,<sp/>Cursor);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_iter_backward_chars(Start,<sp/>g_utf8_strlen(Console-&gt;Chars<sp/>+<sp/>I,<sp/>Console-&gt;NumChars<sp/>-<sp/>I)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;NumChars<sp/>=<sp/>stpcpy(Console-&gt;Chars<sp/>+<sp/>I,<sp/>Combo)<sp/>-<sp/>Console-&gt;Chars;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_delete(InputBuffer,<sp/>Start,<sp/>End);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert(InputBuffer,<sp/>Start,<sp/>Console-&gt;Chars<sp/>+<sp/>I,<sp/>Console-&gt;NumChars<sp/>-<sp/>I);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_show(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/>GtkWindow<sp/>*Parent)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_set_transient_for(GTK_WINDOW(Console-&gt;Window),<sp/>Parent);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_show_all(Console-&gt;Window);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_hide(Console-&gt;DebugButtons);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_grab_focus(Console-&gt;InputView);</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gtk_console_append(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_utf8_validate(Buffer,<sp/>Length,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Buffer,<sp/>Length,<sp/>Console-&gt;OutputTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Length;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>HexChars[16]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Bytes[4]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>??&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Byte<sp/>=<sp/>Buffer[I];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bytes[1]<sp/>=<sp/>HexChars[Byte<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bytes[2]<sp/>=<sp/>HexChars[Byte<sp/>&amp;<sp/>15];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/>Bytes,<sp/>3,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_text_buffer_insert_with_tags(LogBuffer,<sp/>End,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>Console-&gt;BinaryTag,<sp/>NULL);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_scroll_mark_onscreen(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>Console-&gt;EndMark);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gtk_events_pending())<sp/>gtk_main_iteration();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*gtk_console_print(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(LogBuffer,<sp/>End);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__stringbuffer__t" kindref="compound">ml_stringbuffer_t</ref><sp/>Buffer[1]<sp/>=<sp/>{ML_STRINGBUFFER_INIT};</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Count;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Result<sp/>=<sp/>ml_stringbuffer_simple_append(Buffer,<sp/>Args[I]);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is_error(Result))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_stringbuffer_drain(Buffer,<sp/>Console,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_append);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(gtk_events_pending())<sp/>gtk_main_iteration();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLNil;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*gtk_console_display(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_COUNT(1);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(0,<sp/>MLBooleanT);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;DisplayOutput<sp/>=<sp/>Args[0]<sp/>==<sp/>(<ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*)MLTrue;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Args[0];</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_printf(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Format,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Buffer;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>Args;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(Args,<sp/>Format);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>vasprintf(&amp;Buffer,<sp/>Format,<sp/>Args);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(Args);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_console_append(Console,<sp/>Buffer,<sp/>Length);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>free(Buffer);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*console_set_font(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_COUNT(2);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(0,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(1,<sp/>MLIntegerT);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;FontDescription<sp/>=<sp/>pango_font_description_new();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>pango_font_description_set_family(Console-&gt;FontDescription,<sp/>ml_string_value(Args[0]));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>pango_font_description_set_size(Console-&gt;FontDescription,<sp/>PANGO_SCALE<sp/>*<sp/>ml_integer_value(Args[1]));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;InputView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;LogView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLNil;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*console_set_style(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_COUNT(1);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(0,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceStyleSchemeManager<sp/>*StyleManager<sp/>=<sp/>gtk_source_style_scheme_manager_get_default();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;StyleScheme<sp/>=<sp/>gtk_source_style_scheme_manager_get_scheme(StyleManager,<sp/>ml_string_value(Args[0]));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(GTK_SOURCE_BUFFER(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView))),<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(GTK_SOURCE_BUFFER(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;LogView))),<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLNil;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*console_add_cycle(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_COUNT(1);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(0,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>1;<sp/>I<sp/>&lt;<sp/>Count;<sp/>++I)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(I,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Cycles,<sp/>ml_string_value(Args[I<sp/>-<sp/>1]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_string_value(Args[I]));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Cycles,<sp/>ml_string_value(Args[Count<sp/>-<sp/>1]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_string_value(Args[0]));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLNil;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*console_add_combo(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_COUNT(2);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(0,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECK_ARG_TYPE(1,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Combos,<sp/>ml_string_value(Args[0]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_string_value(Args[1]));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Cycles,<sp/>ml_string_value(Args[1]),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ml_string_value(Args[0]));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLNil;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_included_run(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*State,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Value)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*Caller<sp/>=<sp/>State-&gt;Caller;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml_is_error(Value))<sp/>ML_RETURN(Value);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ml_call(Caller,<sp/>Value,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>console_include_fnx(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*Caller,<sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Count,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>**Args)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECKX_ARG_COUNT(1);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_CHECKX_ARG_TYPE(0,<sp/>MLStringT);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*State<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>State-&gt;Caller<sp/>=<sp/>Caller;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>State-&gt;Context<sp/>=<sp/>Caller-&gt;Context;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>State-&gt;run<sp/>=<sp/>console_included_run;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ml_load_file(State,<sp/>(ml_getter_t)ml_compiler_lookup,<sp/>Console-&gt;Compiler,<sp/>ml_string_value(Args[0]),<sp/>NULL);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gboolean<sp/>console_update_status(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_word<sp/>HeapSize,<sp/>FreeBytes,<sp/>UnmappedBytes,<sp/>BytesSinceGC,<sp/>TotalBytes;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_get_heap_usage_safe(&amp;HeapSize,<sp/>&amp;FreeBytes,<sp/>&amp;UnmappedBytes,<sp/>&amp;BytesSinceGC,<sp/>&amp;TotalBytes);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_word<sp/>UsedSize<sp/>=<sp/>HeapSize<sp/>-<sp/>FreeBytes;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UsedBase,<sp/>HeapBase;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UsedUnits,<sp/>HeapUnits;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UsedSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedBase<sp/>=<sp/>UsedSize;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UsedSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>20))<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedBase<sp/>=<sp/>UsedSize<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UsedSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>30))<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedBase<sp/>=<sp/>UsedSize<sp/>&gt;&gt;<sp/>20;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedBase<sp/>=<sp/>UsedSize<sp/>&gt;&gt;<sp/>30;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UsedUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HeapSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapBase<sp/>=<sp/>HeapSize;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HeapSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>20))<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapBase<sp/>=<sp/>HeapSize<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HeapSize<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>30))<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapBase<sp/>=<sp/>HeapSize<sp/>&gt;&gt;<sp/>20;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapBase<sp/>=<sp/>HeapSize<sp/>&gt;&gt;<sp/>30;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapUnits<sp/>=<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Text[48];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(Text,<sp/></highlight><highlight class="stringliteral">&quot;Memory:<sp/>%d%c<sp/>/<sp/>%d%c&quot;</highlight><highlight class="normal">,<sp/>UsedBase,<sp/>UsedUnits,<sp/>HeapBase,<sp/>HeapUnits);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_label_set_text(Console-&gt;MemoryBar,<sp/>Text);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*printf(&quot;Memory<sp/>Status:\n&quot;);</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;\tHeapSize<sp/>=<sp/>%ld\n&quot;,<sp/>HeapSize);</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;\tFreeBytes<sp/>=<sp/>%ld\n&quot;,<sp/>FreeBytes);</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;\tUnmappedBytes<sp/>=<sp/>%ld\n&quot;,<sp/>UnmappedBytes);</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;\tBytesSinceGC<sp/>=<sp/>%ld\n&quot;,<sp/>BytesSinceGC);</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;\tTotalBytes<sp/>=<sp/>%ld\n&quot;,<sp/>TotalBytes);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>G_SOURCE_CONTINUE;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*gtk_console(<ref refid="structml__context__t" kindref="compound">ml_context_t</ref><sp/>*Context,<sp/>ml_getter_t<sp/>GlobalGet,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Globals)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_init(0,<sp/>0);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Base.Type<sp/>=<sp/>ConsoleT;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Base.run<sp/>=<sp/>(ml_state_fn)ml_console_repl_run;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Base.Context<sp/>=<sp/>Context;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Name<sp/>=<sp/>strdup(</highlight><highlight class="stringliteral">&quot;&lt;console&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;ParentGetter<sp/>=<sp/>GlobalGet;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;ParentGlobals<sp/>=<sp/>Globals;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;HistoryIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;HistoryEnd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Parser<sp/>=<sp/><ref refid="group__compiler_1gab31c0e27d21db6f748c137bf13bd7e28" kindref="member">ml_parser</ref>(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Compiler<sp/>=<sp/>ml_compiler((ml_getter_t)console_global_get,<sp/>Console);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_parser_source(Console-&gt;Parser,<sp/>(<ref refid="structml__source__t" kindref="compound">ml_source_t</ref>){Console-&gt;Name,<sp/>0});</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Notebook<sp/>=<sp/>GTK_NOTEBOOK(gtk_notebook_new());</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>GC_asprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&amp;Console-&gt;ConfigPath,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>g_get_user_config_dir(),<sp/></highlight><highlight class="stringliteral">&quot;minilang.conf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Config<sp/>=<sp/>g_key_file_new();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>g_key_file_load_from_file(Console-&gt;Config,<sp/>Console-&gt;ConfigPath,<sp/>G_KEY_FILE_NONE,<sp/>NULL);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceLanguageManager<sp/>*LanguageManager<sp/>=<sp/>gtk_source_language_manager_get_default();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Language<sp/>=<sp/>gtk_source_language_manager_get_language(LanguageManager,<sp/></highlight><highlight class="stringliteral">&quot;minilang&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceBuffer<sp/>*InputBuffer<sp/>=<sp/>gtk_source_buffer_new_with_language(Console-&gt;Language);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;InputView<sp/>=<sp/>gtk_source_view_new_with_buffer(InputBuffer);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceCompletion<sp/>*Completion<sp/>=<sp/>gtk_source_view_get_completion(GTK_SOURCE_VIEW(Console-&gt;InputView));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceCompletionProvider<sp/>*Provider<sp/>=<sp/>gtk_console_completion_provider(Console-&gt;Compiler);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_completion_add_provider(Completion,<sp/>Provider,<sp/>NULL);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextTagTable<sp/>*TagTable<sp/>=<sp/>gtk_text_buffer_get_tag_table(GTK_TEXT_BUFFER(InputBuffer));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;OutputTag<sp/>=<sp/>gtk_text_tag_new(</highlight><highlight class="stringliteral">&quot;log-output&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;ResultTag<sp/>=<sp/>gtk_text_tag_new(</highlight><highlight class="stringliteral">&quot;log-result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;ErrorTag<sp/>=<sp/>gtk_text_tag_new(</highlight><highlight class="stringliteral">&quot;log-error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;BinaryTag<sp/>=<sp/>gtk_text_tag_new(</highlight><highlight class="stringliteral">&quot;log-binary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(Console-&gt;OutputTag,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#FFFFF0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(Console-&gt;ResultTag,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#FFF0F0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;foreground&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#303030&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;indent&quot;</highlight><highlight class="normal">,<sp/>10,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(Console-&gt;ErrorTag,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#FFF0F0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;foreground&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#FF0000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;indent&quot;</highlight><highlight class="normal">,<sp/>10,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>g_object_set(Console-&gt;BinaryTag,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#F0F0FF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;foreground&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;#FF8000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_tag_table_add(TagTable,<sp/>Console-&gt;OutputTag);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_tag_table_add(TagTable,<sp/>Console-&gt;ResultTag);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_tag_table_add(TagTable,<sp/>Console-&gt;ErrorTag);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_tag_table_add(TagTable,<sp/>Console-&gt;BinaryTag);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceBuffer<sp/>*LogBuffer<sp/>=<sp/>gtk_source_buffer_new(TagTable);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;LogView<sp/>=<sp/>gtk_source_view_new_with_buffer(LogBuffer);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_editable(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>FALSE);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceStyleSchemeManager<sp/>*StyleManager<sp/>=<sp/>gtk_source_style_scheme_manager_get_default();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;SourceBuffer<sp/>=<sp/>gtk_source_buffer_new_with_language(Console-&gt;Language);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;LogScrolled<sp/>=<sp/>gtk_scrolled_window_new(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(Console-&gt;LogScrolled),<sp/>Console-&gt;LogView);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;ThreadStore<sp/>=<sp/>gtk_list_store_new(3,<sp/>G_TYPE_INT,<sp/>G_TYPE_STRING,<sp/>G_TYPE_INT);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_sortable_set_sort_column_id(GTK_TREE_SORTABLE(Console-&gt;ThreadStore),<sp/>0,<sp/>GTK_SORT_ASCENDING);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ThreadView<sp/>=<sp/>Console-&gt;ThreadView<sp/>=<sp/>gtk_tree_view_new_with_model(GTK_TREE_MODEL(Console-&gt;ThreadStore));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_insert_column_with_attributes(GTK_TREE_VIEW(ThreadView),<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Thread&quot;</highlight><highlight class="normal">,<sp/>gtk_cell_renderer_text_new(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_insert_column_with_attributes(GTK_TREE_VIEW(ThreadView),<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Source&quot;</highlight><highlight class="normal">,<sp/>gtk_cell_renderer_text_new(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_insert_column_with_attributes(GTK_TREE_VIEW(ThreadView),<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Line&quot;</highlight><highlight class="normal">,<sp/>gtk_cell_renderer_text_new(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_set_activate_on_single_click(GTK_TREE_VIEW(ThreadView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(ThreadView),<sp/></highlight><highlight class="stringliteral">&quot;row-activated&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_thread_activated),<sp/>Console);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;FrameStore<sp/>=<sp/>gtk_tree_store_new(2,<sp/>G_TYPE_STRING,<sp/>G_TYPE_STRING);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*FrameView<sp/>=<sp/>Console-&gt;FrameView<sp/>=<sp/>gtk_tree_view_new_with_model(GTK_TREE_MODEL(Console-&gt;FrameStore));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gtk_tree_view_set_level_indentation(GTK_TREE_VIEW(FrameView),<sp/>20);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_insert_column_with_attributes(GTK_TREE_VIEW(FrameView),<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">,<sp/>gtk_cell_renderer_text_new(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_insert_column_with_attributes(GTK_TREE_VIEW(FrameView),<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;Value&quot;</highlight><highlight class="normal">,<sp/>gtk_cell_renderer_text_new(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_tree_view_set_activate_on_single_click(GTK_TREE_VIEW(FrameView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*Debugging<sp/>=<sp/>gtk_paned_new(GTK_ORIENTATION_VERTICAL);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*Scrolled<sp/>=<sp/>gtk_scrolled_window_new(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(Scrolled),<sp/>ThreadView);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_add1(GTK_PANED(Debugging),<sp/>Scrolled);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>Scrolled<sp/>=<sp/>gtk_scrolled_window_new(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(Scrolled),<sp/>FrameView);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_add2(GTK_PANED(Debugging),<sp/>Scrolled);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_set_position(GTK_PANED(Debugging),<sp/>100);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*OutputPane<sp/>=<sp/>gtk_paned_new(GTK_ORIENTATION_HORIZONTAL);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_pack1(GTK_PANED(OutputPane),<sp/>GTK_WIDGET(Console-&gt;Notebook),<sp/>TRUE,<sp/>TRUE);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_pack2(GTK_PANED(OutputPane),<sp/>Debugging,<sp/>TRUE,<sp/>TRUE);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gtk_paned_set_position(GTK_PANED(OutputPane),<sp/>200);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Paned<sp/>=<sp/>gtk_paned_new(GTK_ORIENTATION_VERTICAL);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*InputPanel<sp/>=<sp/>gtk_box_new(GTK_ORIENTATION_HORIZONTAL,<sp/>2);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*DebugButtons<sp/>=<sp/>Console-&gt;DebugButtons<sp/>=<sp/>gtk_box_new(GTK_ORIENTATION_HORIZONTAL,<sp/>2);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*StepInButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_label(GTK_BUTTON(StepInButton),<sp/></highlight><highlight class="stringliteral">&quot;In&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(DebugButtons),<sp/>StepInButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*StepOverButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_label(GTK_BUTTON(StepOverButton),<sp/></highlight><highlight class="stringliteral">&quot;Over&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(DebugButtons),<sp/>StepOverButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*StepOutButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_label(GTK_BUTTON(StepOutButton),<sp/></highlight><highlight class="stringliteral">&quot;Out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(DebugButtons),<sp/>StepOutButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ContinueButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_label(GTK_BUTTON(ContinueButton),<sp/></highlight><highlight class="stringliteral">&quot;Run&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(DebugButtons),<sp/>ContinueButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ContinueAllButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_label(GTK_BUTTON(ContinueAllButton),<sp/></highlight><highlight class="stringliteral">&quot;Run<sp/>All&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(DebugButtons),<sp/>ContinueAllButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(StepInButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_step_in),<sp/>Console);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(StepOverButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_step_over),<sp/>Console);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(StepOutButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_step_out),<sp/>Console);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(ContinueButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_continue),<sp/>Console);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(ContinueAllButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_continue_all),<sp/>Console);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(InputPanel),<sp/>DebugButtons,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*SubmitButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_image(GTK_BUTTON(SubmitButton),<sp/>gtk_image_new_from_icon_name(</highlight><highlight class="stringliteral">&quot;go-jump-symbolic&quot;</highlight><highlight class="normal">,<sp/>GTK_ICON_SIZE_BUTTON));</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ClearButton<sp/>=<sp/>gtk_button_new();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_button_set_image(GTK_BUTTON(ClearButton),<sp/>gtk_image_new_from_icon_name(</highlight><highlight class="stringliteral">&quot;edit-delete-symbolic&quot;</highlight><highlight class="normal">,<sp/>GTK_ICON_SIZE_BUTTON));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(InputPanel),<sp/>Console-&gt;InputView,<sp/>TRUE,<sp/>TRUE,<sp/>2);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(InputPanel),<sp/>SubmitButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(InputPanel),<sp/>ClearButton,<sp/>FALSE,<sp/>FALSE,<sp/>2);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*StyleCombo<sp/>=<sp/>gtk_source_style_scheme_chooser_button_new();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(StyleCombo),<sp/></highlight><highlight class="stringliteral">&quot;notify::style-scheme&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_style_changed),<sp/>Console);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*FontButton<sp/>=<sp/>gtk_font_button_new();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(FontButton),<sp/></highlight><highlight class="stringliteral">&quot;font-set&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_font_changed),<sp/>Console);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*SourceView<sp/>=<sp/>Console-&gt;SourceView<sp/>=<sp/>gtk_source_view_new_with_buffer(Console-&gt;SourceBuffer);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_monospace(GTK_TEXT_VIEW(SourceView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_tab_width(GTK_SOURCE_VIEW(SourceView),<sp/>4);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_highlight_current_line(GTK_SOURCE_VIEW(SourceView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_show_line_numbers(GTK_SOURCE_VIEW(SourceView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*SourceScrolled<sp/>=<sp/>gtk_scrolled_window_new(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(SourceScrolled),<sp/>SourceView);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_notebook_append_page(Console-&gt;Notebook,<sp/>SourceScrolled,<sp/>gtk_label_new(</highlight><highlight class="stringliteral">&quot;&lt;console&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*InputFrame<sp/>=<sp/>gtk_frame_new(NULL);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(InputFrame),<sp/>InputPanel);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(Console-&gt;InputView),<sp/></highlight><highlight class="stringliteral">&quot;key-press-event&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_keypress),<sp/>Console);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(SubmitButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_submit),<sp/>Console);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(ClearButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_clear),<sp/>Console);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;Window<sp/>=<sp/>gtk_window_new(GTK_WINDOW_TOPLEVEL);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_set_icon_name(GTK_WINDOW(Console-&gt;Window),<sp/></highlight><highlight class="stringliteral">&quot;face-smile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ReplBox<sp/>=<sp/>gtk_box_new(GTK_ORIENTATION_VERTICAL,<sp/>2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(ReplBox),<sp/>Console-&gt;LogScrolled,<sp/>TRUE,<sp/>TRUE,<sp/>2);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(ReplBox),<sp/>InputFrame,<sp/>FALSE,<sp/>TRUE,<sp/>2);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_add1(GTK_PANED(Console-&gt;Paned),<sp/>OutputPane);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_add2(GTK_PANED(Console-&gt;Paned),<sp/>ReplBox);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_paned_set_position(GTK_PANED(Console-&gt;Paned),<sp/>600);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*LayoutButton<sp/>=<sp/>gtk_button_new_with_label(</highlight><highlight class="stringliteral">&quot;Layout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(LayoutButton),<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(toggle_layout),<sp/>Console);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*MenuButton<sp/>=<sp/>gtk_menu_button_new();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ActionsBox<sp/>=<sp/>gtk_box_new(GTK_ORIENTATION_VERTICAL,<sp/>2);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(ActionsBox),<sp/>StyleCombo,<sp/>FALSE,<sp/>TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(ActionsBox),<sp/>FontButton,<sp/>FALSE,<sp/>TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_box_pack_start(GTK_BOX(ActionsBox),<sp/>LayoutButton,<sp/>FALSE,<sp/>TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*ActionsPopover<sp/>=<sp/>gtk_popover_new(MenuButton);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(ActionsPopover),<sp/>ActionsBox);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_menu_button_set_popover(GTK_MENU_BUTTON(MenuButton),<sp/>ActionsPopover);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_show_all(ActionsBox);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*HeaderBar<sp/>=<sp/>gtk_header_bar_new();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_header_bar_set_title(GTK_HEADER_BAR(HeaderBar),<sp/></highlight><highlight class="stringliteral">&quot;Minilang&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_header_bar_set_has_subtitle(GTK_HEADER_BAR(HeaderBar),<sp/>FALSE);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_header_bar_set_show_close_button(GTK_HEADER_BAR(HeaderBar),<sp/>TRUE);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_header_bar_pack_start(GTK_HEADER_BAR(HeaderBar),<sp/>MenuButton);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_set_titlebar(GTK_WINDOW(Console-&gt;Window),<sp/>HeaderBar);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*MemoryBar<sp/>=<sp/>gtk_label_new(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_header_bar_pack_end(GTK_HEADER_BAR(HeaderBar),<sp/>MemoryBar);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;MemoryBar<sp/>=<sp/>GTK_LABEL(MemoryBar);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_container_add(GTK_CONTAINER(Console-&gt;Window),<sp/>Console-&gt;Paned);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_key_file_has_key(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsize<sp/>Length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gint<sp/>*Size<sp/>=<sp/>g_key_file_get_integer_list(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>&amp;Length,<sp/>NULL);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[0]<sp/>=<sp/>Size[0];</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[1]<sp/>=<sp/>Size[1];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[0]<sp/>=<sp/>640;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;WindowSize[1]<sp/>=<sp/>480;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_set_default_size(GTK_WINDOW(Console-&gt;Window),<sp/>Console-&gt;WindowSize[0],<sp/>Console-&gt;WindowSize[1]);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(Console-&gt;Window),<sp/></highlight><highlight class="stringliteral">&quot;size-allocate&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(console_size_allocate),<sp/>Console);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect(G_OBJECT(Console-&gt;Window),<sp/></highlight><highlight class="stringliteral">&quot;delete-event&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(ml_gir_loop_quit),<sp/>NULL);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;set_font&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction(Console,<sp/>(ml_callback_t)console_set_font));</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;set_style&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction(Console,<sp/>(ml_callback_t)console_set_style));</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;add_cycle&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction(Console,<sp/>(ml_callback_t)console_add_cycle));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;add_combo&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction(Console,<sp/>(ml_callback_t)console_add_combo));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;include&quot;</highlight><highlight class="normal">,<sp/>ml_cfunctionx(Console,<sp/>(ml_callbackx_t)console_include_fnx));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_key_file_has_key(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;font&quot;</highlight><highlight class="normal">,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;FontName<sp/>=<sp/>g_key_file_get_string(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;font&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;FontName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Monospace<sp/>10&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;FontDescription<sp/>=<sp/>pango_font_description_from_string(Console-&gt;FontName);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;InputView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(Console-&gt;LogView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_override_font(SourceView,<sp/>Console-&gt;FontDescription);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_font_button_set_font_name(GTK_FONT_BUTTON(FontButton),<sp/>Console-&gt;FontName);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_key_file_has_key(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*StyleId<sp/>=<sp/>g_key_file_get_string(Console-&gt;Config,<sp/></highlight><highlight class="stringliteral">&quot;gtk-console&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console-&gt;StyleScheme<sp/>=<sp/>gtk_source_style_scheme_manager_get_scheme(StyleManager,<sp/>StyleId);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkSourceBuffer<sp/>*InputBuffer<sp/>=<sp/>GTK_SOURCE_BUFFER(gtk_text_view_get_buffer(GTK_TEXT_VIEW(Console-&gt;InputView)));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(InputBuffer,<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(LogBuffer,<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_buffer_set_style_scheme(Console-&gt;SourceBuffer,<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_source_style_scheme_chooser_set_style_scheme(GTK_SOURCE_STYLE_SCHEME_CHOOSER(StyleCombo),<sp/>Console-&gt;StyleScheme);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_top_margin(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>4);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_bottom_margin(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>4);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_left_margin(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>4);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_right_margin(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>4);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_monospace(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(Console-&gt;LogView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_tab_width(GTK_SOURCE_VIEW(Console-&gt;LogView),<sp/>4);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkTextIter<sp/>End[1];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_buffer_get_end_iter(GTK_TEXT_BUFFER(LogBuffer),<sp/>End);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;EndMark<sp/>=<sp/>gtk_text_buffer_create_mark(GTK_TEXT_BUFFER(LogBuffer),<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,<sp/>End,<sp/>FALSE);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkSourceMarkAttributes<sp/>*MarkAttributes<sp/>=<sp/>gtk_source_mark_attributes_new();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>GdkPixbuf<sp/>*MarkPixbuf<sp/>=<sp/>gdk_pixbuf_new(GDK_COLORSPACE_RGB,<sp/>TRUE,<sp/>8,<sp/>32,<sp/>32);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>gdk_pixbuf_fill(MarkPixbuf,<sp/>0xFF8000FF);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_mark_attributes_set_pixbuf(MarkAttributes,<sp/>MarkPixbuf);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_mark_attributes(GTK_SOURCE_VIEW(Console-&gt;LogView),<sp/></highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">,<sp/>MarkAttributes,<sp/>10);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_show_line_marks(GTK_SOURCE_VIEW(Console-&gt;LogView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_top_margin(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>4);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_bottom_margin(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>4);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_left_margin(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>4);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_right_margin(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>4);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_monospace(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(Console-&gt;InputView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_tab_width(GTK_SOURCE_VIEW(Console-&gt;InputView),<sp/>4);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_source_view_set_show_line_numbers(GTK_SOURCE_VIEW(Console-&gt;InputView),<sp/>TRUE);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>g_timeout_add(1000,<sp/>(GSourceFunc)console_update_status,<sp/>Console);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>GError<sp/>*Error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>g_irepository_require(NULL,<sp/></highlight><highlight class="stringliteral">&quot;Gtk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3.0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>&amp;Error);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>g_irepository_require(NULL,<sp/></highlight><highlight class="stringliteral">&quot;GtkSource&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>&amp;Error);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction2(Console,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_print,<sp/>ML_CATEGORY,<sp/>__LINE__));</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>Console-&gt;DisplayOutput<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;display&quot;</highlight><highlight class="normal">,<sp/>ml_cfunction2(Console,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_display,<sp/>ML_CATEGORY,<sp/>__LINE__));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;Console&quot;</highlight><highlight class="normal">,<sp/>ml_gir_instance_get(Console-&gt;Window,<sp/>NULL));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;InputView&quot;</highlight><highlight class="normal">,<sp/>ml_gir_instance_get(Console-&gt;InputView,<sp/>NULL));</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;LogView&quot;</highlight><highlight class="normal">,<sp/>ml_gir_instance_get(Console-&gt;LogView,<sp/>NULL));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>stringmap_insert(Console-&gt;Globals,<sp/></highlight><highlight class="stringliteral">&quot;idebug&quot;</highlight><highlight class="normal">,<sp/>interactive_debugger(</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)console_debug_enter,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)console_debug_exit,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)gtk_console_log,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console,</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GlobalGet,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Globals</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Console;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_load_file(<ref refid="structgtk__console__t" kindref="compound">gtk_console_t</ref><sp/>*Console,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*FileName,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Args)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structml__call__state__t" kindref="compound">ml_call_state_t</ref><sp/>*State<sp/>=<sp/>ml_call_state((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)Console,<sp/>1);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>State-&gt;Args[0]<sp/>=<sp/>Args;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>ml_load_file((<ref refid="structml__state__t" kindref="compound">ml_state_t</ref><sp/>*)State,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)console_global_get,<sp/>Console,<sp/>FileName,<sp/>NULL);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gtk_console_init()<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gtk_console_init.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/gtk_console.c"/>
  </compounddef>
</doxygen>
