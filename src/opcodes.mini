let Opcodes := []

with Input := file("opcodes.txt", "r") do
	loop
		let Line := while Input:read
		Opcodes:put(Line:trim / ",")
	end
	Input:close
end

with Output := file("ml_opcodes.h", "w") do
	Output:write("#ifndef ML_OPCODES_H\n#define ML_OPCODES_H\n\ntypedef enum {\n")
	for (Name, Type) in Opcodes do
		Output:write('\tMLI_{Name},\n')
	end
	Output:write("} ml_opcode_t;\n\ntypedef enum {\n")
	let Types := list(unique(Opcodes -> _[2])):sort
	for Type in Types do
		Output:write('\tMLIT_{Type},\n')
	end
	Output:write("} ml_inst_type_t;\n\nextern const char *MLInstNames[];\nextern const ml_inst_type_t MLInstTypes[];\n\n")
	Output:write("#endif\n")
	Output:close
end

with Output := file("ml_opcodes.c", "w") do
	Output:write("#include \"ml_opcodes.h\"\n\nconst char *MLInstNames[] = {\n")
	for (Name, Type) in Opcodes do
		Output:write('\t\"{Name:lower}\",\n')
	end
	Output:write("};\n\nconst ml_inst_type_t MLInstTypes[] = {\n")
	for (Name, Type) in Opcodes do
		Output:write('\tMLIT_{Type},\n')
	end
	Output:write("};\n\n")
	Output:close
end
