#ifndef ML_OPCODES_H
#define ML_OPCODES_H

#define ML_BYTECODE_VERSION 3

typedef enum {
	MLI_AND,
	MLI_ASSIGN,
	MLI_ASSIGN_LOCAL,
	MLI_CALL,
	MLI_CALL_CONST,
	MLI_CALL_CONST_0,
	MLI_CALL_CONST_1,
	MLI_CALL_CONST_2,
	MLI_CALL_CONST_3,
	MLI_CALL_CONST_4,
	MLI_CALL_CONST_5,
	MLI_CALL_CONST_6,
	MLI_CALL_CONST_7,
	MLI_CALL_CONST_8,
	MLI_CALL_CONST_9,
	MLI_CALL_METHOD,
	MLI_CALL_METHOD_0,
	MLI_CALL_METHOD_1,
	MLI_CALL_METHOD_2,
	MLI_CALL_METHOD_3,
	MLI_CALL_METHOD_4,
	MLI_CALL_METHOD_5,
	MLI_CALL_METHOD_6,
	MLI_CALL_METHOD_7,
	MLI_CALL_METHOD_8,
	MLI_CALL_METHOD_9,
	MLI_CATCH,
	MLI_CATCHX,
	MLI_CLOSURE,
	MLI_CLOSURE_TYPED,
	MLI_ENTER,
	MLI_EXIT,
	MLI_FOR,
	MLI_GOTO,
	MLI_IF_DEBUG,
	MLI_ITER,
	MLI_KEY,
	MLI_LET,
	MLI_LETI,
	MLI_LETX,
	MLI_LINK,
	MLI_LIST_APPEND,
	MLI_LIST_NEW,
	MLI_LOAD,
	MLI_LOAD_PUSH,
	MLI_LOAD_VAR,
	MLI_LOCAL,
	MLI_LOCALI,
	MLI_LOCAL_PUSH,
	MLI_MAP_INSERT,
	MLI_MAP_NEW,
	MLI_NEXT,
	MLI_NIL,
	MLI_NIL_PUSH,
	MLI_NOT,
	MLI_OR,
	MLI_PARAM_TYPE,
	MLI_PARTIAL_NEW,
	MLI_PARTIAL_SET,
	MLI_POP,
	MLI_PUSH,
	MLI_REF,
	MLI_REFI,
	MLI_REFX,
	MLI_RESOLVE,
	MLI_RESUME,
	MLI_RETRY,
	MLI_RETURN,
	MLI_STRING_ADD,
	MLI_STRING_ADDS,
	MLI_STRING_ADD_1,
	MLI_STRING_END,
	MLI_STRING_NEW,
	MLI_STRING_POP,
	MLI_SUSPEND,
	MLI_SWITCH,
	MLI_TAIL_CALL,
	MLI_TAIL_CALL_CONST,
	MLI_TAIL_CALL_CONST_0,
	MLI_TAIL_CALL_CONST_1,
	MLI_TAIL_CALL_CONST_2,
	MLI_TAIL_CALL_CONST_3,
	MLI_TAIL_CALL_CONST_4,
	MLI_TAIL_CALL_CONST_5,
	MLI_TAIL_CALL_CONST_6,
	MLI_TAIL_CALL_CONST_7,
	MLI_TAIL_CALL_CONST_8,
	MLI_TAIL_CALL_CONST_9,
	MLI_TAIL_CALL_METHOD,
	MLI_TAIL_CALL_METHOD_0,
	MLI_TAIL_CALL_METHOD_1,
	MLI_TAIL_CALL_METHOD_2,
	MLI_TAIL_CALL_METHOD_3,
	MLI_TAIL_CALL_METHOD_4,
	MLI_TAIL_CALL_METHOD_5,
	MLI_TAIL_CALL_METHOD_6,
	MLI_TAIL_CALL_METHOD_7,
	MLI_TAIL_CALL_METHOD_8,
	MLI_TAIL_CALL_METHOD_9,
	MLI_TRY,
	MLI_TUPLE_NEW,
	MLI_UPVALUE,
	MLI_VALUE_1,
	MLI_VALUE_2,
	MLI_VAR,
	MLI_VARX,
	MLI_VAR_TYPE,
	MLI_WITH,
	MLI_WITHX,
} ml_opcode_t;

typedef enum {
	MLIT_CLOSURE,
	MLIT_COUNT,
	MLIT_COUNT_CHARS,
	MLIT_COUNT_COUNT,
	MLIT_COUNT_COUNT_DECL,
	MLIT_COUNT_DECL,
	MLIT_DECL,
	MLIT_INST,
	MLIT_INST_COUNT_DECL,
	MLIT_NONE,
	MLIT_SWITCH,
	MLIT_VALUE,
	MLIT_VALUE_COUNT,
	MLIT_VALUE_COUNT_DATA,
	MLIT_VALUE_DATA,
} ml_inst_type_t;

extern const char *MLInstNames[];
extern const ml_inst_type_t MLInstTypes[];

#endif
