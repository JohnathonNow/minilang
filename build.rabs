-- ROOT --

%include common.rabs

if PLATFORM = "Darwin" then
	setenv("LDFLAGS", '-L/usr/local/opt/libffi/lib')
	setenv("PKG_CONFIG_PATH", '/usr/local/opt/libffi/lib/pkgconfig')
end

CFLAGS := old + ["-std=gnu99", "-fstrict-aliasing", "-Wstrict-aliasing", "-I.", "-pthread", "-DGC_THREADS", "-D_GNU_SOURCE", '-D{PLATFORM}']
LDFLAGS := old + ["-lm"]

if DEBUG then
	CFLAGS := old + ["-g", "-DGC_DEBUG", "-DDEBUG"]
	LDFLAGS := old + ["-g"]
else
	CFLAGS := old + ["-O3", "-g"]
	LDFLAGS := old + ["-g"]
end

var Objects := [
	file("minilang.o"),
	file("ml_compiler.o"),
	file("ml_runtime.o"),
	file("ml_types.o"),
	file("ml_file.o"),
	file("ml_iterfns.o"),
	file("sha256.o"),
	file("stringmap.o"),
	file("ml_console.o"),
	file("ml_object.o")
]

if defined("LIBUV") then
	Objects:put(file("ml_libuv.o"))
	CFLAGS := old + ["-DUSE_ML_UV"]
	LDFLAGS := old + ["-luv"]
end

if defined("USEGTK") then
	Objects:put(file("ml_gir.o"), file("gtk_console.o"))
	CFLAGS := old + ["-DUSE_ML_GIR", pkgconfig("--cflags gtk+-3.0 gdk-pixbuf-2.0 gtksourceview-4 gobject-introspection-1.0")]
	LDFLAGS := old + [pkgconfig("--libs gtk+-3.0 gdk-pixbuf-2.0 gtksourceview-4 gobject-introspection-1.0")]
end

if defined("USECBOR") then
	Objects:put(file("ml_cbor.o"))
	CFLAGS := old + ["-DUSE_ML_CBOR", pkgconfig("--cflags libcbor")]
	LDFLAGS := old + [pkgconfig("--libs libcbor")]
end

if PLATFORM = "Linux" then
	Objects := old + [file("linenoise.o")]
	LDFLAGS := old + ["-lgc"]
elseif PLATFORM = "FreeBSD" then
	Objects := old + [file("linenoise.o")]
	CFLAGS := old + ["-I/usr/local/include"]
	LDFLAGS := old + ["-L/usr/local/lib", "-lgc-threaded"]
elseif PLATFORM = "Darwin" then
	Objects := old + [file("linenoise.o")]
	LDFLAGS := old + ["-lgc"]
elseif PLATFORM = "Mingw" then
end

c_library(file("libminilang.a"), Objects)
MINILANG := c_program(file("minilang"), [file("ml_main.o")] + Objects)
MINIPP := c_program(file("minipp"), [file("minipp.o")] + Objects)

var InstallInclude := PREFIX / "include/minilang"
var InstallLib := PREFIX / "lib"

var InstallHeaders := [
	"linenoise.h",
	"minilang.h",
	"ml_console.h",
	"ml_file.h",
	"ml_iterfns.h",
	"ml_internal.h",
	"ml_macros.h",
	"ml_types.h",
	"ml_object.h",
	"ml_compiler.h",
	"sha256.h",
	"stringmap.h"
]

if defined("USECBOR") then
	InstallHeaders:put("ml_cbor.h")
end

for Header in InstallHeaders do
	install(file(Header), InstallInclude / Header)
end

install(file("libminilang.a"), InstallLib / "libminilang.a")

subdir("test")
